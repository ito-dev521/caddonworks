"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/profile/page",{

/***/ "(app-pages-browser)/./src/contexts/auth-context.tsx":
/*!***************************************!*\
  !*** ./src/contexts/auth-context.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* __next_internal_client_entry_do_not_use__ useAuth,AuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useAuth() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userProfile, setUserProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userRole, setUserRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userOrganization, setUserOrganization] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const fetchingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Get initial session\n        const getInitialSession = async ()=>{\n            try {\n                var _session_user, _session_access_token;\n                console.log(\"AuthProvider: 初期セッション取得開始\");\n                const { data: { session }, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.getSession();\n                if (error) {\n                    console.error(\"AuthProvider: セッション取得エラー:\", error);\n                    setLoading(false);\n                    return;\n                }\n                console.log(\"AuthProvider: セッション取得結果:\", {\n                    hasSession: !!session,\n                    userId: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id,\n                    hasAccessToken: !!(session === null || session === void 0 ? void 0 : session.access_token),\n                    tokenLength: session === null || session === void 0 ? void 0 : (_session_access_token = session.access_token) === null || _session_access_token === void 0 ? void 0 : _session_access_token.length\n                });\n                var _session_user1;\n                setUser((_session_user1 = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user1 !== void 0 ? _session_user1 : null);\n                if ((session === null || session === void 0 ? void 0 : session.user) && (session === null || session === void 0 ? void 0 : session.access_token)) {\n                    console.log(\"\\uD83D\\uDE80 AuthProvider: 初期セッション - ユーザープロフィール取得開始\");\n                    // setTimeoutで次のイベントループで実行（React Strict Mode対策）\n                    setTimeout(()=>{\n                        console.log(\"⏱️ setTimeout実行: fetchUserProfile呼び出し (初期セッション)\");\n                        fetchUserProfile(session.user.id);\n                    }, 0);\n                } else {\n                    console.log(\"AuthProvider: セッションまたはトークンなし、ローディング終了\");\n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error(\"AuthProvider: 初期化エラー:\", error);\n                // エラーが発生してもローディング状態を解除\n                setUser(null);\n                setUserProfile(null);\n                setUserRole(null);\n                setUserOrganization(null);\n            } finally{\n                setLoading(false);\n            }\n        };\n        getInitialSession();\n        // Listen for auth changes\n        const { data: { subscription } } = _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.onAuthStateChange(async (event, session)=>{\n            var _session_user;\n            const timestamp = new Date().toISOString();\n            console.log(\"\\uD83D\\uDD04 [\".concat(timestamp, \"] Auth state change:\"), {\n                event,\n                userId: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id,\n                hasToken: !!(session === null || session === void 0 ? void 0 : session.access_token)\n            });\n            var _session_user1;\n            setUser((_session_user1 = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user1 !== void 0 ? _session_user1 : null);\n            if ((session === null || session === void 0 ? void 0 : session.user) && event === \"SIGNED_IN\") {\n                // ログイン時のみプロフィールを取得（重複を避ける）\n                console.log(\"\\uD83D\\uDD11 [\".concat(timestamp, \"] Auth state change: SIGNED_IN, fetching profile\"));\n                // setTimeoutで次のイベントループで実行（React Strict Mode対策）\n                setTimeout(()=>{\n                    console.log(\"⏱️ [\".concat(timestamp, \"] setTimeout実行: fetchUserProfile呼び出し (SIGNED_IN)\"));\n                    fetchUserProfile(session.user.id);\n                }, 0);\n            } else if (event === \"SIGNED_OUT\") {\n                console.log(\"Auth state change: SIGNED_OUT, clearing profile\");\n                setUserProfile(null);\n                setUserRole(null);\n                setUserOrganization(null);\n            }\n            // ローディング状態を更新（初期化後は常にfalse）\n            if (event !== \"INITIAL_SESSION\") {\n                setLoading(false);\n            }\n        });\n        return ()=>subscription.unsubscribe();\n    }, []) // fetchUserProfileを依存配列から削除\n    ;\n    const fetchUserProfile = async (authUserId)=>{\n        var _stack;\n        const timestamp = new Date().toISOString();\n        const callStack = (_stack = new Error().stack) === null || _stack === void 0 ? void 0 : _stack.split(\"\\n\").slice(1, 4).join(\" -> \");\n        console.log(\"\\uD83D\\uDD0D [\".concat(timestamp, \"] fetchUserProfile: 開始\"), {\n            authUserId,\n            fetchingRef: fetchingRef.current,\n            callStack\n        });\n        // 重複実行を防ぐ\n        if (fetchingRef.current === authUserId) {\n            console.log(\"⚠️ [\".concat(timestamp, \"] fetchUserProfile: 既に実行中のためスキップ\"), {\n                authUserId\n            });\n            return;\n        }\n        fetchingRef.current = authUserId;\n        console.log(\"\\uD83C\\uDFC3 [\".concat(timestamp, \"] fetchUserProfile: 実行開始\"), {\n            authUserId\n        });\n        try {\n            // Fetch user profile\n            console.log(\"fetchUserProfile: ユーザープロフィール取得開始\");\n            const { data: profile, error: profileError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"users\").select(\"*\").eq(\"auth_user_id\", authUserId).single();\n            console.log(\"fetchUserProfile: ユーザープロフィール結果\", {\n                profile: profile === null || profile === void 0 ? void 0 : profile.id,\n                error: profileError === null || profileError === void 0 ? void 0 : profileError.message\n            });\n            if (profileError && profileError.code !== \"PGRST116\") {\n                console.error(\"Error fetching user profile:\", profileError);\n                return;\n            }\n            setUserProfile(profile);\n            // Fetch user role and organization from memberships\n            if (profile) {\n                console.log(\"fetchUserProfile: メンバーシップ取得開始\", {\n                    profileId: profile.id\n                });\n                const { data: membership, error: roleError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"memberships\").select(\"role, org_id\").eq(\"user_id\", profile.id).single();\n                console.log(\"fetchUserProfile: メンバーシップ結果\", {\n                    role: membership === null || membership === void 0 ? void 0 : membership.role,\n                    org_id: membership === null || membership === void 0 ? void 0 : membership.org_id,\n                    error: roleError === null || roleError === void 0 ? void 0 : roleError.message\n                });\n                if (roleError && roleError.code !== \"PGRST116\") {\n                    console.error(\"Error fetching user role:\", roleError);\n                    return;\n                }\n                setUserRole((membership === null || membership === void 0 ? void 0 : membership.role) || null);\n                // 組織情報を取得\n                if (membership === null || membership === void 0 ? void 0 : membership.org_id) {\n                    const { data: orgData, error: orgError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"organizations\").select(\"id, name\").eq(\"id\", membership.org_id).single();\n                    if (orgError) {\n                        console.error(\"Error fetching organization:\", orgError);\n                        setUserOrganization(null);\n                    } else {\n                        setUserOrganization({\n                            id: orgData.id,\n                            name: orgData.name\n                        });\n                    }\n                } else {\n                    setUserOrganization(null);\n                }\n                console.log(\"fetchUserProfile: 完了\", {\n                    role: membership === null || membership === void 0 ? void 0 : membership.role,\n                    organization: membership === null || membership === void 0 ? void 0 : membership.org_id\n                });\n            }\n        } catch (error) {\n            console.error(\"Error in fetchUserProfile:\", error);\n        } finally{\n            // 実行完了後にfetchingRefをクリア\n            fetchingRef.current = null;\n            setLoading(false) // ローディング状態を解除\n            ;\n            console.log(\"✅ [\".concat(timestamp, \"] fetchUserProfile: 実行完了\"), {\n                authUserId\n            });\n        }\n    };\n    const signIn = async (email, password)=>{\n        console.log(\"signIn: 開始\", {\n            email\n        });\n        setLoading(true);\n        try {\n            var _data_user;\n            console.log(\"signIn: Supabase認証開始\");\n            // タイムアウト処理を追加\n            const authPromise = _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            const timeoutPromise = new Promise((_, reject)=>{\n                setTimeout(()=>reject(new Error(\"認証タイムアウト（30秒）\")), 30000);\n            });\n            const { data, error } = await Promise.race([\n                authPromise,\n                timeoutPromise\n            ]);\n            console.log(\"signIn: Supabase認証結果\", {\n                data: data === null || data === void 0 ? void 0 : (_data_user = data.user) === null || _data_user === void 0 ? void 0 : _data_user.id,\n                error: error === null || error === void 0 ? void 0 : error.message\n            });\n            if (error) throw error;\n            console.log(\"signIn: 認証成功\");\n            // 認証成功後、ユーザープロフィールを手動で取得\n            if (data === null || data === void 0 ? void 0 : data.user) {\n                console.log(\"signIn: ユーザープロフィール取得開始\");\n                // fetchUserProfileを直接呼び出さず、setTimeoutで遅延実行\n                setTimeout(()=>{\n                    fetchUserProfile(data.user.id);\n                }, 50);\n                console.log(\"signIn: ユーザープロフィール取得完了\");\n            }\n        } catch (error) {\n            console.error(\"signIn: 認証エラー\", error);\n            throw error;\n        } finally{\n            console.log(\"signIn: 終了\");\n            setLoading(false);\n        }\n    };\n    const signUp = async (email, password, userData)=>{\n        setLoading(true);\n        try {\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        display_name: userData.display_name,\n                        specialties: userData.specialties || [],\n                        qualifications: userData.qualifications || []\n                    }\n                }\n            });\n            if (error) throw error;\n            // Create user profile after successful signup\n            if (data.user) {\n                const { error: profileError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"users\").insert({\n                    auth_user_id: data.user.id,\n                    email: data.user.email,\n                    display_name: userData.display_name || \"\",\n                    specialties: userData.specialties || [],\n                    qualifications: userData.qualifications || [],\n                    experience_years: userData.experience_years\n                });\n                if (profileError) {\n                    console.error(\"Error creating user profile:\", profileError);\n                }\n            }\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signOut = async ()=>{\n        setLoading(true);\n        try {\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signOut();\n            if (error) throw error;\n            setUser(null);\n            setUserProfile(null);\n            setUserRole(null);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const updateProfile = async (updates)=>{\n        if (!userProfile) {\n            console.error(\"updateProfile: userProfile is null\");\n            throw new Error(\"ユーザープロフィールが見つかりません\");\n        }\n        try {\n            console.log(\"updateProfile: 更新開始\", {\n                userId: userProfile.id,\n                updates\n            });\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"users\").update(updates).eq(\"id\", userProfile.id).select().single();\n            if (error) {\n                console.error(\"updateProfile: Supabaseエラー\", error);\n                throw error;\n            }\n            console.log(\"updateProfile: 更新成功\", data);\n            setUserProfile({\n                ...userProfile,\n                ...updates\n            });\n        } catch (error) {\n            console.error(\"Error updating profile:\", error);\n            throw error;\n        }\n    };\n    const getRedirectPath = ()=>{\n        if (!userRole) return \"/dashboard\";\n        switch(userRole){\n            case \"Contractor\":\n                return \"/jobs\";\n            case \"OrgAdmin\":\n                return \"/projects\";\n            case \"Reviewer\":\n                return \"/reviews\";\n            default:\n                return \"/dashboard\";\n        }\n    };\n    const value = {\n        user,\n        userProfile,\n        userRole,\n        userOrganization,\n        loading,\n        signIn,\n        signUp,\n        signOut,\n        updateProfile,\n        getRedirectPath\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/sayuri/caddonworks/src/contexts/auth-context.tsx\",\n        lineNumber: 365,\n        columnNumber: 5\n    }, this);\n}\n_s1(AuthProvider, \"ccYiCj2xqj5Z6erfBYaQwasZsfk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/auth-context.tsx\n"));

/***/ })

});