"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/file-uri-to-path";
exports.ids = ["vendor-chunks/file-uri-to-path"];
exports.modules = {

/***/ "(rsc)/./node_modules/file-uri-to-path/dist/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/file-uri-to-path/dist/src/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst path_1 = __webpack_require__(/*! path */ \"path\");\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */ function fileUriToPath(uri) {\n    if (typeof uri !== \"string\" || uri.length <= 7 || uri.substring(0, 7) !== \"file://\") {\n        throw new TypeError(\"must pass in a file:// URI to convert to a file path\");\n    }\n    const rest = decodeURI(uri.substring(7));\n    const firstSlash = rest.indexOf(\"/\");\n    let host = rest.substring(0, firstSlash);\n    let path = rest.substring(firstSlash + 1);\n    // 2.  Scheme Definition\n    // As a special case, <host> can be the string \"localhost\" or the empty\n    // string; this is interpreted as \"the machine from which the URL is\n    // being interpreted\".\n    if (host === \"localhost\") {\n        host = \"\";\n    }\n    if (host) {\n        host = path_1.sep + path_1.sep + host;\n    }\n    // 3.2  Drives, drive letters, mount points, file system root\n    // Drive letters are mapped into the top of a file URI in various ways,\n    // depending on the implementation; some applications substitute\n    // vertical bar (\"|\") for the colon after the drive letter, yielding\n    // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n    // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n    // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n    path = path.replace(/^(.+)\\|/, \"$1:\");\n    // for Windows, we need to invert the path separators from what a URI uses\n    if (path_1.sep === \"\\\\\") {\n        path = path.replace(/\\//g, \"\\\\\");\n    }\n    if (/^.+:/.test(path)) {\n    // has Windows drive at beginning of path\n    } else {\n        // unix pathâ€¦\n        path = path_1.sep + path;\n    }\n    return host + path;\n}\nmodule.exports = fileUriToPath; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZmlsZS11cmktdG8tcGF0aC9kaXN0L3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCOzs7Ozs7Q0FNQyxHQUNELFNBQVNDLGNBQWNDLEdBQUc7SUFDdEIsSUFBSSxPQUFPQSxRQUFRLFlBQ2ZBLElBQUlDLE1BQU0sSUFBSSxLQUNkRCxJQUFJRSxTQUFTLENBQUMsR0FBRyxPQUFPLFdBQVc7UUFDbkMsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCO0lBQ0EsTUFBTUMsT0FBT0MsVUFBVUwsSUFBSUUsU0FBUyxDQUFDO0lBQ3JDLE1BQU1JLGFBQWFGLEtBQUtHLE9BQU8sQ0FBQztJQUNoQyxJQUFJQyxPQUFPSixLQUFLRixTQUFTLENBQUMsR0FBR0k7SUFDN0IsSUFBSUcsT0FBT0wsS0FBS0YsU0FBUyxDQUFDSSxhQUFhO0lBQ3ZDLHdCQUF3QjtJQUN4Qix1RUFBdUU7SUFDdkUsb0VBQW9FO0lBQ3BFLHNCQUFzQjtJQUN0QixJQUFJRSxTQUFTLGFBQWE7UUFDdEJBLE9BQU87SUFDWDtJQUNBLElBQUlBLE1BQU07UUFDTkEsT0FBT1gsT0FBT2EsR0FBRyxHQUFHYixPQUFPYSxHQUFHLEdBQUdGO0lBQ3JDO0lBQ0EsNkRBQTZEO0lBQzdELHVFQUF1RTtJQUN2RSxnRUFBZ0U7SUFDaEUsb0VBQW9FO0lBQ3BFLCtEQUErRDtJQUMvRCxtRUFBbUU7SUFDbkUsMkRBQTJEO0lBQzNEQyxPQUFPQSxLQUFLRSxPQUFPLENBQUMsV0FBVztJQUMvQiwwRUFBMEU7SUFDMUUsSUFBSWQsT0FBT2EsR0FBRyxLQUFLLE1BQU07UUFDckJELE9BQU9BLEtBQUtFLE9BQU8sQ0FBQyxPQUFPO0lBQy9CO0lBQ0EsSUFBSSxPQUFPQyxJQUFJLENBQUNILE9BQU87SUFDbkIseUNBQXlDO0lBQzdDLE9BQ0s7UUFDRCxhQUFhO1FBQ2JBLE9BQU9aLE9BQU9hLEdBQUcsR0FBR0Q7SUFDeEI7SUFDQSxPQUFPRCxPQUFPQztBQUNsQjtBQUNBSSxPQUFPQyxPQUFPLEdBQUdmLGVBQ2pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NpdmlsLWVuZ2luZWVyaW5nLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL2ZpbGUtdXJpLXRvLXBhdGgvZGlzdC9zcmMvaW5kZXguanM/M2NjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IHBhdGhfMSA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuLyoqXG4gKiBGaWxlIFVSSSB0byBQYXRoIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmlcbiAqIEByZXR1cm4ge1N0cmluZ30gcGF0aFxuICogQGFwaSBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gZmlsZVVyaVRvUGF0aCh1cmkpIHtcbiAgICBpZiAodHlwZW9mIHVyaSAhPT0gJ3N0cmluZycgfHxcbiAgICAgICAgdXJpLmxlbmd0aCA8PSA3IHx8XG4gICAgICAgIHVyaS5zdWJzdHJpbmcoMCwgNykgIT09ICdmaWxlOi8vJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdtdXN0IHBhc3MgaW4gYSBmaWxlOi8vIFVSSSB0byBjb252ZXJ0IHRvIGEgZmlsZSBwYXRoJyk7XG4gICAgfVxuICAgIGNvbnN0IHJlc3QgPSBkZWNvZGVVUkkodXJpLnN1YnN0cmluZyg3KSk7XG4gICAgY29uc3QgZmlyc3RTbGFzaCA9IHJlc3QuaW5kZXhPZignLycpO1xuICAgIGxldCBob3N0ID0gcmVzdC5zdWJzdHJpbmcoMCwgZmlyc3RTbGFzaCk7XG4gICAgbGV0IHBhdGggPSByZXN0LnN1YnN0cmluZyhmaXJzdFNsYXNoICsgMSk7XG4gICAgLy8gMi4gIFNjaGVtZSBEZWZpbml0aW9uXG4gICAgLy8gQXMgYSBzcGVjaWFsIGNhc2UsIDxob3N0PiBjYW4gYmUgdGhlIHN0cmluZyBcImxvY2FsaG9zdFwiIG9yIHRoZSBlbXB0eVxuICAgIC8vIHN0cmluZzsgdGhpcyBpcyBpbnRlcnByZXRlZCBhcyBcInRoZSBtYWNoaW5lIGZyb20gd2hpY2ggdGhlIFVSTCBpc1xuICAgIC8vIGJlaW5nIGludGVycHJldGVkXCIuXG4gICAgaWYgKGhvc3QgPT09ICdsb2NhbGhvc3QnKSB7XG4gICAgICAgIGhvc3QgPSAnJztcbiAgICB9XG4gICAgaWYgKGhvc3QpIHtcbiAgICAgICAgaG9zdCA9IHBhdGhfMS5zZXAgKyBwYXRoXzEuc2VwICsgaG9zdDtcbiAgICB9XG4gICAgLy8gMy4yICBEcml2ZXMsIGRyaXZlIGxldHRlcnMsIG1vdW50IHBvaW50cywgZmlsZSBzeXN0ZW0gcm9vdFxuICAgIC8vIERyaXZlIGxldHRlcnMgYXJlIG1hcHBlZCBpbnRvIHRoZSB0b3Agb2YgYSBmaWxlIFVSSSBpbiB2YXJpb3VzIHdheXMsXG4gICAgLy8gZGVwZW5kaW5nIG9uIHRoZSBpbXBsZW1lbnRhdGlvbjsgc29tZSBhcHBsaWNhdGlvbnMgc3Vic3RpdHV0ZVxuICAgIC8vIHZlcnRpY2FsIGJhciAoXCJ8XCIpIGZvciB0aGUgY29sb24gYWZ0ZXIgdGhlIGRyaXZlIGxldHRlciwgeWllbGRpbmdcbiAgICAvLyBcImZpbGU6Ly8vY3wvdG1wL3Rlc3QudHh0XCIuICBJbiBzb21lIGNhc2VzLCB0aGUgY29sb24gaXMgbGVmdFxuICAgIC8vIHVuY2hhbmdlZCwgYXMgaW4gXCJmaWxlOi8vL2M6L3RtcC90ZXN0LnR4dFwiLiAgSW4gb3RoZXIgY2FzZXMsIHRoZVxuICAgIC8vIGNvbG9uIGlzIHNpbXBseSBvbWl0dGVkLCBhcyBpbiBcImZpbGU6Ly8vYy90bXAvdGVzdC50eHRcIi5cbiAgICBwYXRoID0gcGF0aC5yZXBsYWNlKC9eKC4rKVxcfC8sICckMTonKTtcbiAgICAvLyBmb3IgV2luZG93cywgd2UgbmVlZCB0byBpbnZlcnQgdGhlIHBhdGggc2VwYXJhdG9ycyBmcm9tIHdoYXQgYSBVUkkgdXNlc1xuICAgIGlmIChwYXRoXzEuc2VwID09PSAnXFxcXCcpIHtcbiAgICAgICAgcGF0aCA9IHBhdGgucmVwbGFjZSgvXFwvL2csICdcXFxcJyk7XG4gICAgfVxuICAgIGlmICgvXi4rOi8udGVzdChwYXRoKSkge1xuICAgICAgICAvLyBoYXMgV2luZG93cyBkcml2ZSBhdCBiZWdpbm5pbmcgb2YgcGF0aFxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gdW5peCBwYXRo4oCmXG4gICAgICAgIHBhdGggPSBwYXRoXzEuc2VwICsgcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIGhvc3QgKyBwYXRoO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmaWxlVXJpVG9QYXRoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInBhdGhfMSIsInJlcXVpcmUiLCJmaWxlVXJpVG9QYXRoIiwidXJpIiwibGVuZ3RoIiwic3Vic3RyaW5nIiwiVHlwZUVycm9yIiwicmVzdCIsImRlY29kZVVSSSIsImZpcnN0U2xhc2giLCJpbmRleE9mIiwiaG9zdCIsInBhdGgiLCJzZXAiLCJyZXBsYWNlIiwidGVzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/file-uri-to-path/dist/src/index.js\n");

/***/ })

};
;