"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/projects/route";
exports.ids = ["app/api/projects/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_sayuri_caddonworks_src_app_api_projects_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/projects/route.ts */ \"(rsc)/./src/app/api/projects/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/projects/route\",\n        pathname: \"/api/projects\",\n        filename: \"route\",\n        bundlePath: \"app/api/projects/route\"\n    },\n    resolvedPagePath: \"/Users/sayuri/caddonworks/src/app/api/projects/route.ts\",\n    nextConfigOutput,\n    userland: _Users_sayuri_caddonworks_src_app_api_projects_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/projects/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9qZWN0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvamVjdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9qZWN0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNheXVyaSUyRmNhZGRvbndvcmtzJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnNheXVyaSUyRmNhZGRvbndvcmtzJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ087QUFDcEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaXZpbC1lbmdpbmVlcmluZy1wbGF0Zm9ybS8/MWM2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc2F5dXJpL2NhZGRvbndvcmtzL3NyYy9hcHAvYXBpL3Byb2plY3RzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wcm9qZWN0cy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb2plY3RzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9wcm9qZWN0cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zYXl1cmkvY2FkZG9ud29ya3Mvc3JjL2FwcC9hcGkvcHJvamVjdHMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvcHJvamVjdHMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/projects/route.ts":
/*!***************************************!*\
  !*** ./src/app/api/projects/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\n// Service roleキーでSupabaseクライアントを作成（RLSをバイパス）\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://rxnozwuamddqlcwysxag.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { title, description, budget, start_date, end_date, bidding_deadline, category, contractor_id, assignee_name, required_contractors = 1, required_level = \"beginner\" } = body;\n        // バリデーション\n        if (!title || !description || !budget || !start_date || !end_date || !bidding_deadline || !category) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"必須項目が入力されていません\"\n            }, {\n                status: 400\n            });\n        }\n        // Authorizationヘッダーからユーザー情報を取得\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証が必要です\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.replace(\"Bearer \", \"\");\n        const { data: { user }, error: authError } = await supabaseAdmin.auth.getUser(token);\n        if (authError || !user) {\n            console.error(\"認証エラー:\", authError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証に失敗しました\"\n            }, {\n                status: 401\n            });\n        }\n        // ユーザーの組織情報を取得\n        // まず、usersテーブルでユーザーが存在するか確認\n        const { data: userProfile, error: userError } = await supabaseAdmin.from(\"users\").select(\"id, email, display_name\").eq(\"auth_user_id\", user.id).single();\n        if (userError || !userProfile) {\n            console.error(\"ユーザープロフィールが見つかりません:\", userError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"ユーザープロフィールが見つかりません。デモアカウントを再作成してください。\"\n            }, {\n                status: 403\n            });\n        }\n        const { data: memberships, error: membershipError } = await supabaseAdmin.from(\"memberships\").select(`\n        org_id,\n        role,\n        organizations (\n          id,\n          name\n        )\n      `).eq(\"user_id\", userProfile.id);\n        if (membershipError || !memberships || memberships.length === 0) {\n            console.error(\"組織情報の取得に失敗:\", membershipError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"組織情報の取得に失敗しました: \" + (membershipError?.message || \"メンバーシップが見つかりません\")\n            }, {\n                status: 403\n            });\n        }\n        // OrgAdminのメンバーシップを探す\n        const membership = memberships.find((m)=>m.role === \"OrgAdmin\");\n        if (!membership) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"この操作を実行する権限がありません（OrgAdmin権限が必要です）\"\n            }, {\n                status: 403\n            });\n        }\n        const company = membership.organizations;\n        // 挿入するデータを準備してログ出力\n        const insertData = {\n            title,\n            description,\n            budget: Number(budget),\n            start_date,\n            end_date,\n            bidding_deadline,\n            category,\n            contractor_id: contractor_id || null,\n            assignee_name: assignee_name || null,\n            org_id: company.id,\n            status: \"bidding\" // デフォルトは入札中\n        };\n        // required_contractorsカラムが存在する場合のみ追加\n        // データベーススキーマが更新されていない場合の回避策\n        if (required_contractors !== undefined) {\n            insertData.required_contractors = Number(required_contractors);\n        }\n        // required_levelカラムが存在する場合のみ追加\n        if (required_level !== undefined) {\n            insertData.required_level = required_level;\n        }\n        // 認証済みユーザーとして新規案件を作成（RLSをバイパス）\n        const { data: projectData, error: projectError } = await supabaseAdmin.from(\"projects\").insert(insertData).select().single();\n        if (projectError) {\n            console.error(\"案件作成エラー:\", projectError);\n            // required_contractorsカラムが存在しない場合の特別な処理\n            if (projectError.message.includes(\"required_contractors\")) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    message: \"データベーススキーマが古いです。required_contractorsカラムを追加してください。\",\n                    error: projectError.message,\n                    suggestion: \"SupabaseのSQLエディタでadd-required-contractors-column.sqlを実行してください。\"\n                }, {\n                    status: 500\n                });\n            }\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"案件の作成に失敗しました: \" + projectError.message\n            }, {\n                status: 400\n            });\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"案件が正常に作成されました\",\n            project: projectData\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"案件作成エラー:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"サーバーエラーが発生しました\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        // Authorizationヘッダーからユーザー情報を取得\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証が必要です\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.replace(\"Bearer \", \"\");\n        const { data: { user }, error: authError } = await supabaseAdmin.auth.getUser(token);\n        if (authError || !user) {\n            console.error(\"projects API: 認証エラー:\", authError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証に失敗しました: \" + (authError?.message || \"ユーザーが見つかりません\")\n            }, {\n                status: 401\n            });\n        }\n        // まず、usersテーブルでユーザーが存在するか確認\n        const { data: userProfile, error: userError } = await supabaseAdmin.from(\"users\").select(\"id, email, display_name\").eq(\"auth_user_id\", user.id).single();\n        if (userError || !userProfile) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"ユーザープロフィールが見つかりません。デモアカウントを再作成してください。\"\n            }, {\n                status: 403\n            });\n        }\n        // ユーザーの組織情報を取得\n        const { data: memberships, error: membershipError } = await supabaseAdmin.from(\"memberships\").select(`\n        org_id,\n        role,\n        organizations (\n          id,\n          name\n        )\n      `).eq(\"user_id\", userProfile.id);\n        if (membershipError || !memberships || memberships.length === 0) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"組織情報の取得に失敗しました\"\n            }, {\n                status: 403\n            });\n        }\n        // OrgAdminのメンバーシップを探す\n        const membership = memberships.find((m)=>m.role === \"OrgAdmin\");\n        if (!membership) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"この操作を実行する権限がありません（OrgAdmin権限が必要です）\"\n            }, {\n                status: 403\n            });\n        }\n        const company = membership.organizations;\n        // クエリパラメータを取得\n        const { searchParams } = new URL(request.url);\n        const statusFilter = searchParams.get(\"status\");\n        // 組織の案件データを取得（会社間分離）\n        let query = supabaseAdmin.from(\"projects\").select(`\n        id,\n        title,\n        description,\n        status,\n        budget,\n        start_date,\n        end_date,\n        contractor_id,\n        assignee_name,\n        category,\n        created_at,\n        bidding_deadline,\n        required_contractors\n      `).eq(\"org_id\", company.id) // 組織IDでフィルタリング\n        ;\n        // ステータスフィルタを適用\n        if (statusFilter) {\n            query = query.eq(\"status\", statusFilter);\n        }\n        const { data: projectsData, error: projectsError } = await query.order(\"created_at\", {\n            ascending: false\n        });\n        if (projectsError) {\n            console.error(\"案件データの取得に失敗:\", projectsError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"案件データの取得に失敗しました\"\n            }, {\n                status: 400\n            });\n        }\n        // 受注者情報を取得\n        const contractorIds = Array.from(new Set(projectsData?.map((p)=>p.contractor_id).filter(Boolean) || []));\n        let contractorMap = {};\n        if (contractorIds.length > 0) {\n            const { data: contractors } = await supabaseAdmin.from(\"users\").select(\"id, display_name, email\").in(\"id\", contractorIds);\n            contractorMap = contractors?.reduce((acc, contractor)=>{\n                acc[contractor.id] = contractor;\n                return acc;\n            }, {}) || {};\n        }\n        // 契約情報を取得（複数受注者対応）\n        const projectIds = projectsData?.map((p)=>p.id) || [];\n        let contractMap = {};\n        if (projectIds.length > 0) {\n            const { data: contracts } = await supabaseAdmin.from(\"contracts\").select(`\n          project_id,\n          contractor_id,\n          bid_amount,\n          status\n        `).in(\"project_id\", projectIds).eq(\"status\", \"signed\") // 署名済み契約のみ\n            ;\n            // 受注者情報を取得\n            const contractorIds = [\n                ...new Set(contracts?.map((c)=>c.contractor_id) || [])\n            ];\n            let contractorMap = {};\n            if (contractorIds.length > 0) {\n                const { data: contractors } = await supabaseAdmin.from(\"users\").select(\"id, display_name, email\").in(\"id\", contractorIds);\n                contractorMap = contractors?.reduce((acc, contractor)=>{\n                    acc[contractor.id] = contractor;\n                    return acc;\n                }, {}) || {};\n            }\n            // プロジェクトごとに契約をグループ化\n            contractMap = contracts?.reduce((acc, contract)=>{\n                if (!acc[contract.project_id]) {\n                    acc[contract.project_id] = [];\n                }\n                acc[contract.project_id].push({\n                    contractor_id: contract.contractor_id,\n                    contract_amount: contract.bid_amount,\n                    contractor_name: contractorMap[contract.contractor_id]?.display_name || \"不明な受注者\",\n                    contractor_email: contractorMap[contract.contractor_id]?.email || \"\"\n                });\n                return acc;\n            }, {}) || {};\n            // デバッグログ\n            console.log(\"契約データ:\", contracts);\n            console.log(\"契約マップ:\", contractMap);\n        }\n        const formattedProjects = projectsData?.map((project)=>{\n            // 期限切れチェック\n            const now = new Date();\n            const deadline = project.bidding_deadline ? new Date(project.bidding_deadline) : null;\n            const isExpired = deadline && deadline < now && project.status === \"bidding\";\n            // 期限までの日数を計算\n            let daysUntilDeadline = null;\n            if (deadline) {\n                daysUntilDeadline = Math.ceil((deadline.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));\n            }\n            const result = {\n                id: project.id,\n                title: project.title,\n                description: project.description,\n                status: project.status,\n                budget: project.budget,\n                start_date: project.start_date,\n                end_date: project.end_date,\n                contractor_id: project.contractor_id,\n                contractor_name: contractorMap[project.contractor_id]?.display_name || \"未割当\",\n                contractor_email: contractorMap[project.contractor_id]?.email || \"\",\n                progress: Math.floor(Math.random() * 100),\n                category: project.category || \"道路設計\",\n                assignee_name: project.assignee_name,\n                created_at: project.created_at,\n                bidding_deadline: project.bidding_deadline,\n                required_contractors: project.required_contractors || 1,\n                is_expired: isExpired,\n                days_until_deadline: daysUntilDeadline,\n                contracts: contractMap[project.id] || [] // 複数受注者の契約情報\n            };\n            // デバッグログ\n            if (contractMap[project.id] && contractMap[project.id].length > 0) {\n                console.log(`プロジェクト ${project.title} の契約情報:`, contractMap[project.id]);\n            }\n            return result;\n        }) || [];\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            projects: formattedProjects\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"案件取得エラー:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"サーバーエラーが発生しました\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3BDNEYsWUFBWW5ELFFBQVFtRCxVQUFVO2dCQUM5Qi9GLGtCQUFrQjRDLFFBQVE1QyxnQkFBZ0I7Z0JBQzFDSSxzQkFBc0J3QyxRQUFReEMsb0JBQW9CLElBQUk7Z0JBQ3RENEYsWUFBWVY7Z0JBQ1pXLHFCQUFxQlY7Z0JBQ3JCakIsV0FBV0QsV0FBVyxDQUFDekIsUUFBUXBCLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxhQUFhO1lBQ3hEO1lBRUEsU0FBUztZQUNULElBQUk2QyxXQUFXLENBQUN6QixRQUFRcEIsRUFBRSxDQUFDLElBQUk2QyxXQUFXLENBQUN6QixRQUFRcEIsRUFBRSxDQUFDLENBQUNJLE1BQU0sR0FBRyxHQUFHO2dCQUNqRVYsUUFBUStELEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRXJDLFFBQVFqRCxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUwRSxXQUFXLENBQUN6QixRQUFRcEIsRUFBRSxDQUFDO1lBQ3ZFO1lBRUEsT0FBT21FO1FBQ1QsTUFBTSxFQUFFO1FBRVIsT0FBTzlHLGtGQUFZQSxDQUFDYSxJQUFJLENBQUM7WUFDdkJ3RyxVQUFVaEI7UUFDWixHQUFHO1lBQUUzRSxRQUFRO1FBQUk7SUFFbkIsRUFBRSxPQUFPUSxPQUFPO1FBQ2RHLFFBQVFILEtBQUssQ0FBQyxZQUFZQTtRQUMxQixPQUFPbEMsa0ZBQVlBLENBQUNhLElBQUksQ0FDdEI7WUFBRVksU0FBUztRQUFpQixHQUM1QjtZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NpdmlsLWVuZ2luZWVyaW5nLXBsYXRmb3JtLy4vc3JjL2FwcC9hcGkvcHJvamVjdHMvcm91dGUudHM/NzAxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbi8vIFNlcnZpY2Ugcm9sZeOCreODvOOBp1N1cGFiYXNl44Kv44Op44Kk44Ki44Oz44OI44KS5L2c5oiQ77yIUkxT44KS44OQ44Kk44OR44K577yJXG5cbmNvbnN0IHN1cGFiYXNlQWRtaW4gPSBjcmVhdGVDbGllbnQoXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXG4gIHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkhLFxuICB7XG4gICAgYXV0aDoge1xuICAgICAgYXV0b1JlZnJlc2hUb2tlbjogZmFsc2UsXG4gICAgICBwZXJzaXN0U2Vzc2lvbjogZmFsc2VcbiAgICB9XG4gIH1cbilcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKClcbiAgICBjb25zdCB7XG4gICAgICB0aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgYnVkZ2V0LFxuICAgICAgc3RhcnRfZGF0ZSxcbiAgICAgIGVuZF9kYXRlLFxuICAgICAgYmlkZGluZ19kZWFkbGluZSxcbiAgICAgIGNhdGVnb3J5LFxuICAgICAgY29udHJhY3Rvcl9pZCxcbiAgICAgIGFzc2lnbmVlX25hbWUsXG4gICAgICByZXF1aXJlZF9jb250cmFjdG9ycyA9IDEsXG4gICAgICByZXF1aXJlZF9sZXZlbCA9ICdiZWdpbm5lcidcbiAgICB9ID0gYm9keVxuXG4gICAgLy8g44OQ44Oq44OH44O844K344On44OzXG4gICAgaWYgKCF0aXRsZSB8fCAhZGVzY3JpcHRpb24gfHwgIWJ1ZGdldCB8fCAhc3RhcnRfZGF0ZSB8fCAhZW5kX2RhdGUgfHwgIWJpZGRpbmdfZGVhZGxpbmUgfHwgIWNhdGVnb3J5KSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgbWVzc2FnZTogJ+W/hemgiOmgheebruOBjOWFpeWKm+OBleOCjOOBpuOBhOOBvuOBm+OCkycgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApXG4gICAgfVxuXG4gICAgLy8gQXV0aG9yaXphdGlvbuODmOODg+ODgOODvOOBi+OCieODpuODvOOCtuODvOaDheWgseOCkuWPluW+l1xuICAgIGNvbnN0IGF1dGhIZWFkZXIgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCdhdXRob3JpemF0aW9uJylcbiAgICBpZiAoIWF1dGhIZWFkZXIpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBtZXNzYWdlOiAn6KqN6Ki844GM5b+F6KaB44Gn44GZJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAxIH1cbiAgICAgIClcbiAgICB9XG5cbiAgICBjb25zdCB0b2tlbiA9IGF1dGhIZWFkZXIucmVwbGFjZSgnQmVhcmVyICcsICcnKVxuICAgIGNvbnN0IHsgZGF0YTogeyB1c2VyIH0sIGVycm9yOiBhdXRoRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW4uYXV0aC5nZXRVc2VyKHRva2VuKVxuICAgIFxuICAgIGlmIChhdXRoRXJyb3IgfHwgIXVzZXIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+iqjeiovOOCqOODqeODvDonLCBhdXRoRXJyb3IpXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgbWVzc2FnZTogJ+iqjeiovOOBq+WkseaVl+OBl+OBvuOBl+OBnycgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgICApXG4gICAgfVxuXG4gICAgLy8g44Om44O844K244O844Gu57WE57mU5oOF5aCx44KS5Y+W5b6XXG4gICAgXG4gICAgLy8g44G+44Ga44CBdXNlcnPjg4bjg7zjg5bjg6vjgafjg6bjg7zjgrbjg7zjgYzlrZjlnKjjgZnjgovjgYvnorroqo1cbiAgICBjb25zdCB7IGRhdGE6IHVzZXJQcm9maWxlLCBlcnJvcjogdXNlckVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXG4gICAgICAuZnJvbSgndXNlcnMnKVxuICAgICAgLnNlbGVjdCgnaWQsIGVtYWlsLCBkaXNwbGF5X25hbWUnKVxuICAgICAgLmVxKCdhdXRoX3VzZXJfaWQnLCB1c2VyLmlkKVxuICAgICAgLnNpbmdsZSgpXG5cblxuICAgIGlmICh1c2VyRXJyb3IgfHwgIXVzZXJQcm9maWxlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfjg6bjg7zjgrbjg7zjg5fjg63jg5XjgqPjg7zjg6vjgYzopovjgaTjgYvjgorjgb7jgZvjgpM6JywgdXNlckVycm9yKVxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IG1lc3NhZ2U6ICfjg6bjg7zjgrbjg7zjg5fjg63jg5XjgqPjg7zjg6vjgYzopovjgaTjgYvjgorjgb7jgZvjgpPjgILjg4fjg6LjgqLjgqvjgqbjg7Pjg4jjgpLlho3kvZzmiJDjgZfjgabjgY/jgaDjgZXjgYTjgIInIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDMgfVxuICAgICAgKVxuICAgIH1cbiAgICBcbiAgICBjb25zdCB7IGRhdGE6IG1lbWJlcnNoaXBzLCBlcnJvcjogbWVtYmVyc2hpcEVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXG4gICAgICAuZnJvbSgnbWVtYmVyc2hpcHMnKVxuICAgICAgLnNlbGVjdChgXG4gICAgICAgIG9yZ19pZCxcbiAgICAgICAgcm9sZSxcbiAgICAgICAgb3JnYW5pemF0aW9ucyAoXG4gICAgICAgICAgaWQsXG4gICAgICAgICAgbmFtZVxuICAgICAgICApXG4gICAgICBgKVxuICAgICAgLmVxKCd1c2VyX2lkJywgdXNlclByb2ZpbGUuaWQpXG5cblxuICAgIGlmIChtZW1iZXJzaGlwRXJyb3IgfHwgIW1lbWJlcnNoaXBzIHx8IG1lbWJlcnNoaXBzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc29sZS5lcnJvcign57WE57mU5oOF5aCx44Gu5Y+W5b6X44Gr5aSx5pWXOicsIG1lbWJlcnNoaXBFcnJvcilcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBtZXNzYWdlOiAn57WE57mU5oOF5aCx44Gu5Y+W5b6X44Gr5aSx5pWX44GX44G+44GX44GfOiAnICsgKG1lbWJlcnNoaXBFcnJvcj8ubWVzc2FnZSB8fCAn44Oh44Oz44OQ44O844K344OD44OX44GM6KaL44Gk44GL44KK44G+44Gb44KTJykgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMyB9XG4gICAgICApXG4gICAgfVxuXG4gICAgLy8gT3JnQWRtaW7jga7jg6Hjg7Pjg5Djg7zjgrfjg4Pjg5fjgpLmjqLjgZlcbiAgICBjb25zdCBtZW1iZXJzaGlwID0gbWVtYmVyc2hpcHMuZmluZChtID0+IG0ucm9sZSA9PT0gJ09yZ0FkbWluJylcbiAgICBpZiAoIW1lbWJlcnNoaXApIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBtZXNzYWdlOiAn44GT44Gu5pON5L2c44KS5a6f6KGM44GZ44KL5qip6ZmQ44GM44GC44KK44G+44Gb44KT77yIT3JnQWRtaW7mqKnpmZDjgYzlv4XopoHjgafjgZnvvIknIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDMgfVxuICAgICAgKVxuICAgIH1cblxuICAgIGNvbnN0IGNvbXBhbnkgPSBtZW1iZXJzaGlwLm9yZ2FuaXphdGlvbnMgYXMgYW55XG5cbiAgICAvLyDmjL/lhaXjgZnjgovjg4fjg7zjgr/jgpLmupblgpnjgZfjgabjg63jgrDlh7rliptcbiAgICBjb25zdCBpbnNlcnREYXRhOiBhbnkgPSB7XG4gICAgICB0aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgYnVkZ2V0OiBOdW1iZXIoYnVkZ2V0KSxcbiAgICAgIHN0YXJ0X2RhdGUsXG4gICAgICBlbmRfZGF0ZSxcbiAgICAgIGJpZGRpbmdfZGVhZGxpbmUsXG4gICAgICBjYXRlZ29yeSxcbiAgICAgIGNvbnRyYWN0b3JfaWQ6IGNvbnRyYWN0b3JfaWQgfHwgbnVsbCxcbiAgICAgIGFzc2lnbmVlX25hbWU6IGFzc2lnbmVlX25hbWUgfHwgbnVsbCxcbiAgICAgIG9yZ19pZDogY29tcGFueS5pZCxcbiAgICAgIHN0YXR1czogJ2JpZGRpbmcnIC8vIOODh+ODleOCqeODq+ODiOOBr+WFpeacreS4rVxuICAgIH1cblxuICAgIC8vIHJlcXVpcmVkX2NvbnRyYWN0b3Jz44Kr44Op44Og44GM5a2Y5Zyo44GZ44KL5aC05ZCI44Gu44G/6L+95YqgXG4gICAgLy8g44OH44O844K/44OZ44O844K544K544Kt44O844Oe44GM5pu05paw44GV44KM44Gm44GE44Gq44GE5aC05ZCI44Gu5Zue6YG/562WXG4gICAgaWYgKHJlcXVpcmVkX2NvbnRyYWN0b3JzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGluc2VydERhdGEucmVxdWlyZWRfY29udHJhY3RvcnMgPSBOdW1iZXIocmVxdWlyZWRfY29udHJhY3RvcnMpXG4gICAgfVxuICAgIFxuICAgIC8vIHJlcXVpcmVkX2xldmVs44Kr44Op44Og44GM5a2Y5Zyo44GZ44KL5aC05ZCI44Gu44G/6L+95YqgXG4gICAgaWYgKHJlcXVpcmVkX2xldmVsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGluc2VydERhdGEucmVxdWlyZWRfbGV2ZWwgPSByZXF1aXJlZF9sZXZlbFxuICAgIH1cblxuXG4gICAgLy8g6KqN6Ki85riI44G/44Om44O844K244O844Go44GX44Gm5paw6KaP5qGI5Lu244KS5L2c5oiQ77yIUkxT44KS44OQ44Kk44OR44K577yJXG4gICAgY29uc3QgeyBkYXRhOiBwcm9qZWN0RGF0YSwgZXJyb3I6IHByb2plY3RFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxuICAgICAgLmZyb20oJ3Byb2plY3RzJylcbiAgICAgIC5pbnNlcnQoaW5zZXJ0RGF0YSlcbiAgICAgIC5zZWxlY3QoKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAocHJvamVjdEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfmoYjku7bkvZzmiJDjgqjjg6njg7w6JywgcHJvamVjdEVycm9yKVxuICAgICAgXG4gICAgICAvLyByZXF1aXJlZF9jb250cmFjdG9yc+OCq+ODqeODoOOBjOWtmOWcqOOBl+OBquOBhOWgtOWQiOOBrueJueWIpeOBquWHpueQhlxuICAgICAgaWYgKHByb2plY3RFcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdyZXF1aXJlZF9jb250cmFjdG9ycycpKSB7XG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgICB7IFxuICAgICAgICAgICAgbWVzc2FnZTogJ+ODh+ODvOOCv+ODmeODvOOCueOCueOCreODvOODnuOBjOWPpOOBhOOBp+OBmeOAgnJlcXVpcmVkX2NvbnRyYWN0b3Jz44Kr44Op44Og44KS6L+95Yqg44GX44Gm44GP44Gg44GV44GE44CCJyxcbiAgICAgICAgICAgIGVycm9yOiBwcm9qZWN0RXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIHN1Z2dlc3Rpb246ICdTdXBhYmFzZeOBrlNRTOOCqOODh+OCo+OCv+OBp2FkZC1yZXF1aXJlZC1jb250cmFjdG9ycy1jb2x1bW4uc3Fs44KS5a6f6KGM44GX44Gm44GP44Gg44GV44GE44CCJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgICAgIClcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IG1lc3NhZ2U6ICfmoYjku7bjga7kvZzmiJDjgavlpLHmlZfjgZfjgb7jgZfjgZ86ICcgKyBwcm9qZWN0RXJyb3IubWVzc2FnZSB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgIClcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgbWVzc2FnZTogJ+ahiOS7tuOBjOato+W4uOOBq+S9nOaIkOOBleOCjOOBvuOBl+OBnycsXG4gICAgICBwcm9qZWN0OiBwcm9qZWN0RGF0YVxuICAgIH0sIHsgc3RhdHVzOiAyMDEgfSlcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+ahiOS7tuS9nOaIkOOCqOODqeODvDonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IG1lc3NhZ2U6ICfjgrXjg7zjg5Djg7zjgqjjg6njg7zjgYznmbrnlJ/jgZfjgb7jgZfjgZ8nIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIEF1dGhvcml6YXRpb27jg5jjg4Pjg4Djg7zjgYvjgonjg6bjg7zjgrbjg7zmg4XloLHjgpLlj5blvpdcbiAgICBjb25zdCBhdXRoSGVhZGVyID0gcmVxdWVzdC5oZWFkZXJzLmdldCgnYXV0aG9yaXphdGlvbicpXG4gICAgXG4gICAgaWYgKCFhdXRoSGVhZGVyKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgbWVzc2FnZTogJ+iqjeiovOOBjOW/heimgeOBp+OBmScgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgICApXG4gICAgfVxuXG4gICAgY29uc3QgdG9rZW4gPSBhdXRoSGVhZGVyLnJlcGxhY2UoJ0JlYXJlciAnLCAnJylcbiAgICBcbiAgICBjb25zdCB7IGRhdGE6IHsgdXNlciB9LCBlcnJvcjogYXV0aEVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluLmF1dGguZ2V0VXNlcih0b2tlbilcbiAgICBcbiAgICBpZiAoYXV0aEVycm9yIHx8ICF1c2VyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdwcm9qZWN0cyBBUEk6IOiqjeiovOOCqOODqeODvDonLCBhdXRoRXJyb3IpXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgbWVzc2FnZTogJ+iqjeiovOOBq+WkseaVl+OBl+OBvuOBl+OBnzogJyArIChhdXRoRXJyb3I/Lm1lc3NhZ2UgfHwgJ+ODpuODvOOCtuODvOOBjOimi+OBpOOBi+OCiuOBvuOBm+OCkycpIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKVxuICAgIH1cblxuXG4gICAgLy8g44G+44Ga44CBdXNlcnPjg4bjg7zjg5bjg6vjgafjg6bjg7zjgrbjg7zjgYzlrZjlnKjjgZnjgovjgYvnorroqo1cbiAgICBjb25zdCB7IGRhdGE6IHVzZXJQcm9maWxlLCBlcnJvcjogdXNlckVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXG4gICAgICAuZnJvbSgndXNlcnMnKVxuICAgICAgLnNlbGVjdCgnaWQsIGVtYWlsLCBkaXNwbGF5X25hbWUnKVxuICAgICAgLmVxKCdhdXRoX3VzZXJfaWQnLCB1c2VyLmlkKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAodXNlckVycm9yIHx8ICF1c2VyUHJvZmlsZSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IG1lc3NhZ2U6ICfjg6bjg7zjgrbjg7zjg5fjg63jg5XjgqPjg7zjg6vjgYzopovjgaTjgYvjgorjgb7jgZvjgpPjgILjg4fjg6LjgqLjgqvjgqbjg7Pjg4jjgpLlho3kvZzmiJDjgZfjgabjgY/jgaDjgZXjgYTjgIInIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDMgfVxuICAgICAgKVxuICAgIH1cblxuICAgIC8vIOODpuODvOOCtuODvOOBrue1hOe5lOaDheWgseOCkuWPluW+l1xuICAgIGNvbnN0IHsgZGF0YTogbWVtYmVyc2hpcHMsIGVycm9yOiBtZW1iZXJzaGlwRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cbiAgICAgIC5mcm9tKCdtZW1iZXJzaGlwcycpXG4gICAgICAuc2VsZWN0KGBcbiAgICAgICAgb3JnX2lkLFxuICAgICAgICByb2xlLFxuICAgICAgICBvcmdhbml6YXRpb25zIChcbiAgICAgICAgICBpZCxcbiAgICAgICAgICBuYW1lXG4gICAgICAgIClcbiAgICAgIGApXG4gICAgICAuZXEoJ3VzZXJfaWQnLCB1c2VyUHJvZmlsZS5pZClcblxuICAgIGlmIChtZW1iZXJzaGlwRXJyb3IgfHwgIW1lbWJlcnNoaXBzIHx8IG1lbWJlcnNoaXBzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IG1lc3NhZ2U6ICfntYTnuZTmg4XloLHjga7lj5blvpfjgavlpLHmlZfjgZfjgb7jgZfjgZ8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDMgfVxuICAgICAgKVxuICAgIH1cblxuICAgIC8vIE9yZ0FkbWlu44Gu44Oh44Oz44OQ44O844K344OD44OX44KS5o6i44GZXG4gICAgY29uc3QgbWVtYmVyc2hpcCA9IG1lbWJlcnNoaXBzLmZpbmQobSA9PiBtLnJvbGUgPT09ICdPcmdBZG1pbicpXG4gICAgaWYgKCFtZW1iZXJzaGlwKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgbWVzc2FnZTogJ+OBk+OBruaTjeS9nOOCkuWun+ihjOOBmeOCi+aoqemZkOOBjOOBguOCiuOBvuOBm+OCk++8iE9yZ0FkbWlu5qip6ZmQ44GM5b+F6KaB44Gn44GZ77yJJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAzIH1cbiAgICAgIClcbiAgICB9XG5cbiAgICBjb25zdCBjb21wYW55ID0gbWVtYmVyc2hpcC5vcmdhbml6YXRpb25zIGFzIGFueVxuXG4gICAgLy8g44Kv44Ko44Oq44OR44Op44Oh44O844K/44KS5Y+W5b6XXG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpXG4gICAgY29uc3Qgc3RhdHVzRmlsdGVyID0gc2VhcmNoUGFyYW1zLmdldCgnc3RhdHVzJylcblxuICAgIC8vIOe1hOe5lOOBruahiOS7tuODh+ODvOOCv+OCkuWPluW+l++8iOS8muekvumWk+WIhumbou+8iVxuICAgIGxldCBxdWVyeSA9IHN1cGFiYXNlQWRtaW5cbiAgICAgIC5mcm9tKCdwcm9qZWN0cycpXG4gICAgICAuc2VsZWN0KGBcbiAgICAgICAgaWQsXG4gICAgICAgIHRpdGxlLFxuICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgc3RhdHVzLFxuICAgICAgICBidWRnZXQsXG4gICAgICAgIHN0YXJ0X2RhdGUsXG4gICAgICAgIGVuZF9kYXRlLFxuICAgICAgICBjb250cmFjdG9yX2lkLFxuICAgICAgICBhc3NpZ25lZV9uYW1lLFxuICAgICAgICBjYXRlZ29yeSxcbiAgICAgICAgY3JlYXRlZF9hdCxcbiAgICAgICAgYmlkZGluZ19kZWFkbGluZSxcbiAgICAgICAgcmVxdWlyZWRfY29udHJhY3RvcnNcbiAgICAgIGApXG4gICAgICAuZXEoJ29yZ19pZCcsIGNvbXBhbnkuaWQpIC8vIOe1hOe5lElE44Gn44OV44Kj44Or44K/44Oq44Oz44KwXG5cbiAgICAvLyDjgrnjg4bjg7zjgr/jgrnjg5XjgqPjg6vjgr/jgpLpgannlKhcbiAgICBpZiAoc3RhdHVzRmlsdGVyKSB7XG4gICAgICBxdWVyeSA9IHF1ZXJ5LmVxKCdzdGF0dXMnLCBzdGF0dXNGaWx0ZXIpXG4gICAgfVxuXG4gICAgY29uc3QgeyBkYXRhOiBwcm9qZWN0c0RhdGEsIGVycm9yOiBwcm9qZWN0c0Vycm9yIH0gPSBhd2FpdCBxdWVyeS5vcmRlcignY3JlYXRlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxuXG4gICAgaWYgKHByb2plY3RzRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+ahiOS7tuODh+ODvOOCv+OBruWPluW+l+OBq+WkseaVlzonLCBwcm9qZWN0c0Vycm9yKVxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IG1lc3NhZ2U6ICfmoYjku7bjg4fjg7zjgr/jga7lj5blvpfjgavlpLHmlZfjgZfjgb7jgZfjgZ8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKVxuICAgIH1cblxuICAgIC8vIOWPl+azqOiAheaDheWgseOCkuWPluW+l1xuICAgIGNvbnN0IGNvbnRyYWN0b3JJZHMgPSBBcnJheS5mcm9tKG5ldyBTZXQocHJvamVjdHNEYXRhPy5tYXAocCA9PiBwLmNvbnRyYWN0b3JfaWQpLmZpbHRlcihCb29sZWFuKSB8fCBbXSkpXG4gICAgbGV0IGNvbnRyYWN0b3JNYXA6IGFueSA9IHt9XG4gICAgXG4gICAgaWYgKGNvbnRyYWN0b3JJZHMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgeyBkYXRhOiBjb250cmFjdG9ycyB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxuICAgICAgICAuZnJvbSgndXNlcnMnKVxuICAgICAgICAuc2VsZWN0KCdpZCwgZGlzcGxheV9uYW1lLCBlbWFpbCcpXG4gICAgICAgIC5pbignaWQnLCBjb250cmFjdG9ySWRzKVxuICAgICAgXG4gICAgICBjb250cmFjdG9yTWFwID0gY29udHJhY3RvcnM/LnJlZHVjZSgoYWNjOiBhbnksIGNvbnRyYWN0b3I6IGFueSkgPT4ge1xuICAgICAgICBhY2NbY29udHJhY3Rvci5pZF0gPSBjb250cmFjdG9yXG4gICAgICAgIHJldHVybiBhY2NcbiAgICAgIH0sIHt9KSB8fCB7fVxuICAgIH1cblxuICAgIC8vIOWlkee0hOaDheWgseOCkuWPluW+l++8iOikh+aVsOWPl+azqOiAheWvvuW/nO+8iVxuICAgIGNvbnN0IHByb2plY3RJZHMgPSBwcm9qZWN0c0RhdGE/Lm1hcChwID0+IHAuaWQpIHx8IFtdXG4gICAgbGV0IGNvbnRyYWN0TWFwOiBhbnkgPSB7fVxuICAgIFxuICAgIGlmIChwcm9qZWN0SWRzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IHsgZGF0YTogY29udHJhY3RzIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXG4gICAgICAgIC5mcm9tKCdjb250cmFjdHMnKVxuICAgICAgICAuc2VsZWN0KGBcbiAgICAgICAgICBwcm9qZWN0X2lkLFxuICAgICAgICAgIGNvbnRyYWN0b3JfaWQsXG4gICAgICAgICAgYmlkX2Ftb3VudCxcbiAgICAgICAgICBzdGF0dXNcbiAgICAgICAgYClcbiAgICAgICAgLmluKCdwcm9qZWN0X2lkJywgcHJvamVjdElkcylcbiAgICAgICAgLmVxKCdzdGF0dXMnLCAnc2lnbmVkJykgLy8g572y5ZCN5riI44G/5aWR57SE44Gu44G/XG4gICAgICBcbiAgICAgIC8vIOWPl+azqOiAheaDheWgseOCkuWPluW+l1xuICAgICAgY29uc3QgY29udHJhY3RvcklkcyA9IFsuLi5uZXcgU2V0KGNvbnRyYWN0cz8ubWFwKGMgPT4gYy5jb250cmFjdG9yX2lkKSB8fCBbXSldXG4gICAgICBsZXQgY29udHJhY3Rvck1hcDogYW55ID0ge31cbiAgICAgIFxuICAgICAgaWYgKGNvbnRyYWN0b3JJZHMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCB7IGRhdGE6IGNvbnRyYWN0b3JzIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXG4gICAgICAgICAgLmZyb20oJ3VzZXJzJylcbiAgICAgICAgICAuc2VsZWN0KCdpZCwgZGlzcGxheV9uYW1lLCBlbWFpbCcpXG4gICAgICAgICAgLmluKCdpZCcsIGNvbnRyYWN0b3JJZHMpXG4gICAgICAgIFxuICAgICAgICBjb250cmFjdG9yTWFwID0gY29udHJhY3RvcnM/LnJlZHVjZSgoYWNjOiBhbnksIGNvbnRyYWN0b3I6IGFueSkgPT4ge1xuICAgICAgICAgIGFjY1tjb250cmFjdG9yLmlkXSA9IGNvbnRyYWN0b3JcbiAgICAgICAgICByZXR1cm4gYWNjXG4gICAgICAgIH0sIHt9KSB8fCB7fVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyDjg5fjg63jgrjjgqfjgq/jg4jjgZTjgajjgavlpZHntITjgpLjgrDjg6vjg7zjg5fljJZcbiAgICAgIGNvbnRyYWN0TWFwID0gY29udHJhY3RzPy5yZWR1Y2UoKGFjYzogYW55LCBjb250cmFjdDogYW55KSA9PiB7XG4gICAgICAgIGlmICghYWNjW2NvbnRyYWN0LnByb2plY3RfaWRdKSB7XG4gICAgICAgICAgYWNjW2NvbnRyYWN0LnByb2plY3RfaWRdID0gW11cbiAgICAgICAgfVxuICAgICAgICBhY2NbY29udHJhY3QucHJvamVjdF9pZF0ucHVzaCh7XG4gICAgICAgICAgY29udHJhY3Rvcl9pZDogY29udHJhY3QuY29udHJhY3Rvcl9pZCxcbiAgICAgICAgICBjb250cmFjdF9hbW91bnQ6IGNvbnRyYWN0LmJpZF9hbW91bnQsXG4gICAgICAgICAgY29udHJhY3Rvcl9uYW1lOiBjb250cmFjdG9yTWFwW2NvbnRyYWN0LmNvbnRyYWN0b3JfaWRdPy5kaXNwbGF5X25hbWUgfHwgJ+S4jeaYjuOBquWPl+azqOiAhScsXG4gICAgICAgICAgY29udHJhY3Rvcl9lbWFpbDogY29udHJhY3Rvck1hcFtjb250cmFjdC5jb250cmFjdG9yX2lkXT8uZW1haWwgfHwgJydcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIGFjY1xuICAgICAgfSwge30pIHx8IHt9XG4gICAgICBcbiAgICAgIC8vIOODh+ODkOODg+OCsOODreOCsFxuICAgICAgY29uc29sZS5sb2coJ+Wlkee0hOODh+ODvOOCvzonLCBjb250cmFjdHMpXG4gICAgICBjb25zb2xlLmxvZygn5aWR57SE44Oe44OD44OXOicsIGNvbnRyYWN0TWFwKVxuICAgIH1cblxuICAgIGNvbnN0IGZvcm1hdHRlZFByb2plY3RzID0gcHJvamVjdHNEYXRhPy5tYXAocHJvamVjdCA9PiB7XG4gICAgICAvLyDmnJ/pmZDliIfjgozjg4Hjgqfjg4Pjgq9cbiAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKClcbiAgICAgIGNvbnN0IGRlYWRsaW5lID0gcHJvamVjdC5iaWRkaW5nX2RlYWRsaW5lID8gbmV3IERhdGUocHJvamVjdC5iaWRkaW5nX2RlYWRsaW5lKSA6IG51bGxcbiAgICAgIGNvbnN0IGlzRXhwaXJlZCA9IGRlYWRsaW5lICYmIGRlYWRsaW5lIDwgbm93ICYmIHByb2plY3Quc3RhdHVzID09PSAnYmlkZGluZydcbiAgICAgIFxuICAgICAgLy8g5pyf6ZmQ44G+44Gn44Gu5pel5pWw44KS6KiI566XXG4gICAgICBsZXQgZGF5c1VudGlsRGVhZGxpbmUgPSBudWxsXG4gICAgICBpZiAoZGVhZGxpbmUpIHtcbiAgICAgICAgZGF5c1VudGlsRGVhZGxpbmUgPSBNYXRoLmNlaWwoKGRlYWRsaW5lLmdldFRpbWUoKSAtIG5vdy5nZXRUaW1lKCkpIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKVxuICAgICAgfVxuXG4gICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgIGlkOiBwcm9qZWN0LmlkLFxuICAgICAgICB0aXRsZTogcHJvamVjdC50aXRsZSxcbiAgICAgICAgZGVzY3JpcHRpb246IHByb2plY3QuZGVzY3JpcHRpb24sXG4gICAgICAgIHN0YXR1czogcHJvamVjdC5zdGF0dXMsXG4gICAgICAgIGJ1ZGdldDogcHJvamVjdC5idWRnZXQsXG4gICAgICAgIHN0YXJ0X2RhdGU6IHByb2plY3Quc3RhcnRfZGF0ZSxcbiAgICAgICAgZW5kX2RhdGU6IHByb2plY3QuZW5kX2RhdGUsXG4gICAgICAgIGNvbnRyYWN0b3JfaWQ6IHByb2plY3QuY29udHJhY3Rvcl9pZCxcbiAgICAgICAgY29udHJhY3Rvcl9uYW1lOiBjb250cmFjdG9yTWFwW3Byb2plY3QuY29udHJhY3Rvcl9pZF0/LmRpc3BsYXlfbmFtZSB8fCAn5pyq5Ymy5b2TJyxcbiAgICAgICAgY29udHJhY3Rvcl9lbWFpbDogY29udHJhY3Rvck1hcFtwcm9qZWN0LmNvbnRyYWN0b3JfaWRdPy5lbWFpbCB8fCAnJyxcbiAgICAgICAgcHJvZ3Jlc3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMCksIC8vIOWun+mam+OBrumAsuaNl+ioiOeul+ODreOCuOODg+OCr+OBq+e9ruOBjeaPm+OBiFxuICAgICAgICBjYXRlZ29yeTogcHJvamVjdC5jYXRlZ29yeSB8fCAn6YGT6Lev6Kit6KiIJyxcbiAgICAgICAgYXNzaWduZWVfbmFtZTogcHJvamVjdC5hc3NpZ25lZV9uYW1lLFxuICAgICAgICBjcmVhdGVkX2F0OiBwcm9qZWN0LmNyZWF0ZWRfYXQsXG4gICAgICAgIGJpZGRpbmdfZGVhZGxpbmU6IHByb2plY3QuYmlkZGluZ19kZWFkbGluZSxcbiAgICAgICAgcmVxdWlyZWRfY29udHJhY3RvcnM6IHByb2plY3QucmVxdWlyZWRfY29udHJhY3RvcnMgfHwgMSxcbiAgICAgICAgaXNfZXhwaXJlZDogaXNFeHBpcmVkLFxuICAgICAgICBkYXlzX3VudGlsX2RlYWRsaW5lOiBkYXlzVW50aWxEZWFkbGluZSxcbiAgICAgICAgY29udHJhY3RzOiBjb250cmFjdE1hcFtwcm9qZWN0LmlkXSB8fCBbXSAvLyDopIfmlbDlj5fms6jogIXjga7lpZHntITmg4XloLFcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8g44OH44OQ44OD44Kw44Ot44KwXG4gICAgICBpZiAoY29udHJhY3RNYXBbcHJvamVjdC5pZF0gJiYgY29udHJhY3RNYXBbcHJvamVjdC5pZF0ubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zb2xlLmxvZyhg44OX44Ot44K444Kn44Kv44OIICR7cHJvamVjdC50aXRsZX0g44Gu5aWR57SE5oOF5aCxOmAsIGNvbnRyYWN0TWFwW3Byb2plY3QuaWRdKVxuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfSkgfHwgW11cblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBwcm9qZWN0czogZm9ybWF0dGVkUHJvamVjdHNcbiAgICB9LCB7IHN0YXR1czogMjAwIH0pXG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfmoYjku7blj5blvpfjgqjjg6njg7w6JywgZXJyb3IpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBtZXNzYWdlOiAn44K144O844OQ44O844Ko44Op44O844GM55m655Sf44GX44G+44GX44GfJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKVxuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VBZG1pbiIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwiYXV0aCIsImF1dG9SZWZyZXNoVG9rZW4iLCJwZXJzaXN0U2Vzc2lvbiIsIlBPU1QiLCJyZXF1ZXN0IiwiYm9keSIsImpzb24iLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiYnVkZ2V0Iiwic3RhcnRfZGF0ZSIsImVuZF9kYXRlIiwiYmlkZGluZ19kZWFkbGluZSIsImNhdGVnb3J5IiwiY29udHJhY3Rvcl9pZCIsImFzc2lnbmVlX25hbWUiLCJyZXF1aXJlZF9jb250cmFjdG9ycyIsInJlcXVpcmVkX2xldmVsIiwibWVzc2FnZSIsInN0YXR1cyIsImF1dGhIZWFkZXIiLCJoZWFkZXJzIiwiZ2V0IiwidG9rZW4iLCJyZXBsYWNlIiwiZGF0YSIsInVzZXIiLCJlcnJvciIsImF1dGhFcnJvciIsImdldFVzZXIiLCJjb25zb2xlIiwidXNlclByb2ZpbGUiLCJ1c2VyRXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJpZCIsInNpbmdsZSIsIm1lbWJlcnNoaXBzIiwibWVtYmVyc2hpcEVycm9yIiwibGVuZ3RoIiwibWVtYmVyc2hpcCIsImZpbmQiLCJtIiwicm9sZSIsImNvbXBhbnkiLCJvcmdhbml6YXRpb25zIiwiaW5zZXJ0RGF0YSIsIk51bWJlciIsIm9yZ19pZCIsInVuZGVmaW5lZCIsInByb2plY3REYXRhIiwicHJvamVjdEVycm9yIiwiaW5zZXJ0IiwiaW5jbHVkZXMiLCJzdWdnZXN0aW9uIiwicHJvamVjdCIsIkdFVCIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsInN0YXR1c0ZpbHRlciIsInF1ZXJ5IiwicHJvamVjdHNEYXRhIiwicHJvamVjdHNFcnJvciIsIm9yZGVyIiwiYXNjZW5kaW5nIiwiY29udHJhY3RvcklkcyIsIkFycmF5IiwiU2V0IiwibWFwIiwicCIsImZpbHRlciIsIkJvb2xlYW4iLCJjb250cmFjdG9yTWFwIiwiY29udHJhY3RvcnMiLCJpbiIsInJlZHVjZSIsImFjYyIsImNvbnRyYWN0b3IiLCJwcm9qZWN0SWRzIiwiY29udHJhY3RNYXAiLCJjb250cmFjdHMiLCJjIiwiY29udHJhY3QiLCJwcm9qZWN0X2lkIiwicHVzaCIsImNvbnRyYWN0X2Ftb3VudCIsImJpZF9hbW91bnQiLCJjb250cmFjdG9yX25hbWUiLCJkaXNwbGF5X25hbWUiLCJjb250cmFjdG9yX2VtYWlsIiwiZW1haWwiLCJsb2ciLCJmb3JtYXR0ZWRQcm9qZWN0cyIsIm5vdyIsIkRhdGUiLCJkZWFkbGluZSIsImlzRXhwaXJlZCIsImRheXNVbnRpbERlYWRsaW5lIiwiTWF0aCIsImNlaWwiLCJnZXRUaW1lIiwicmVzdWx0IiwicHJvZ3Jlc3MiLCJmbG9vciIsInJhbmRvbSIsImNyZWF0ZWRfYXQiLCJpc19leHBpcmVkIiwiZGF5c191bnRpbF9kZWFkbGluZSIsInByb2plY3RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/projects/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();