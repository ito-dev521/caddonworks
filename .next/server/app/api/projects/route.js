"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/projects/route";
exports.ids = ["app/api/projects/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_sayuri_caddonworks_src_app_api_projects_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/projects/route.ts */ \"(rsc)/./src/app/api/projects/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/projects/route\",\n        pathname: \"/api/projects\",\n        filename: \"route\",\n        bundlePath: \"app/api/projects/route\"\n    },\n    resolvedPagePath: \"/Users/sayuri/caddonworks/src/app/api/projects/route.ts\",\n    nextConfigOutput,\n    userland: _Users_sayuri_caddonworks_src_app_api_projects_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/projects/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9qZWN0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvamVjdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9qZWN0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNheXVyaSUyRmNhZGRvbndvcmtzJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnNheXVyaSUyRmNhZGRvbndvcmtzJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ087QUFDcEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaXZpbC1lbmdpbmVlcmluZy1wbGF0Zm9ybS8/MWM2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc2F5dXJpL2NhZGRvbndvcmtzL3NyYy9hcHAvYXBpL3Byb2plY3RzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wcm9qZWN0cy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb2plY3RzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9wcm9qZWN0cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zYXl1cmkvY2FkZG9ud29ya3Mvc3JjL2FwcC9hcGkvcHJvamVjdHMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvcHJvamVjdHMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/projects/route.ts":
/*!***************************************!*\
  !*** ./src/app/api/projects/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\n// Service roleキーでSupabaseクライアントを作成（RLSをバイパス）\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://rxnozwuamddqlcwysxag.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { title, description, budget, start_date, end_date, bidding_deadline, category, contractor_id, assignee_name, required_contractors = 1, required_level = \"beginner\", approver_id, support_enabled } = body;\n        // バリデーション\n        if (!title || !description || !budget || !start_date || !end_date || !bidding_deadline || !category) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"必須項目が入力されていません\"\n            }, {\n                status: 400\n            });\n        }\n        // 日付の整合性チェック（入札締切 <= 開始日 <= 納期）\n        try {\n            const bd = new Date(bidding_deadline);\n            const st = new Date(start_date);\n            const ed = new Date(end_date);\n            if (isNaN(bd.getTime()) || isNaN(st.getTime()) || isNaN(ed.getTime())) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    message: \"日付の形式が正しくありません\"\n                }, {\n                    status: 400\n                });\n            }\n            // 締切日はその日の終わりまで有効\n            const bdEndOfDay = new Date(bd);\n            bdEndOfDay.setHours(23, 59, 59, 999);\n            if (st < bdEndOfDay) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    message: \"開始日は入札締切日以降の日付にしてください\"\n                }, {\n                    status: 400\n                });\n            }\n            if (ed < st) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    message: \"納期は開始日以降の日付にしてください\"\n                }, {\n                    status: 400\n                });\n            }\n        } catch (e) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"日付の検証中にエラーが発生しました\"\n            }, {\n                status: 400\n            });\n        }\n        // Authorizationヘッダーからユーザー情報を取得\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証が必要です\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.replace(\"Bearer \", \"\");\n        const { data: { user }, error: authError } = await supabaseAdmin.auth.getUser(token);\n        if (authError || !user) {\n            console.error(\"認証エラー:\", authError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証に失敗しました\"\n            }, {\n                status: 401\n            });\n        }\n        // ユーザーの組織情報を取得\n        // まず、usersテーブルでユーザーが存在するか確認\n        const { data: userProfile, error: userError } = await supabaseAdmin.from(\"users\").select(\"id, email, display_name\").eq(\"auth_user_id\", user.id).single();\n        if (userError || !userProfile) {\n            console.error(\"ユーザープロフィールが見つかりません:\", userError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"ユーザープロフィールが見つかりません。デモアカウントを再作成してください。\"\n            }, {\n                status: 403\n            });\n        }\n        const { data: memberships, error: membershipError } = await supabaseAdmin.from(\"memberships\").select(`\n        org_id,\n        role,\n        organizations (\n          id,\n          name,\n          approval_required\n        )\n      `).eq(\"user_id\", userProfile.id);\n        if (membershipError || !memberships || memberships.length === 0) {\n            console.error(\"組織情報の取得に失敗:\", membershipError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"組織情報の取得に失敗しました: \" + (membershipError?.message || \"メンバーシップが見つかりません\")\n            }, {\n                status: 403\n            });\n        }\n        // OrgAdminのメンバーシップを探す\n        const membership = memberships.find((m)=>m.role === \"OrgAdmin\");\n        if (!membership) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"この操作を実行する権限がありません（OrgAdmin権限が必要です）\"\n            }, {\n                status: 403\n            });\n        }\n        const company = membership.organizations;\n        const approvalRequired = company.approval_required;\n        // 承認が必要でapprover_idが指定されていない場合のバリデーション\n        if (approvalRequired && !approver_id) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"承認が必要な組織では承認者を選択してください\"\n            }, {\n                status: 400\n            });\n        }\n        // 挿入するデータを準備してログ出力\n        const insertData = {\n            title,\n            description,\n            budget: Number(budget),\n            start_date,\n            end_date,\n            bidding_deadline,\n            category,\n            contractor_id: contractor_id || null,\n            assignee_name: assignee_name || null,\n            org_id: company.id,\n            approver_id: approver_id || null,\n            created_by: userProfile.id,\n            status: approvalRequired ? \"pending_approval\" : \"bidding\",\n            support_enabled: !!support_enabled\n        };\n        // required_contractorsカラムが存在する場合のみ追加\n        // データベーススキーマが更新されていない場合の回避策\n        if (required_contractors !== undefined) {\n            insertData.required_contractors = Number(required_contractors);\n        }\n        // required_levelカラムが存在する場合のみ追加\n        if (required_level !== undefined) {\n            insertData.required_level = required_level;\n        }\n        // 認証済みユーザーとして新規案件を作成（RLSをバイパス）\n        const { data: projectData, error: projectError } = await supabaseAdmin.from(\"projects\").insert(insertData).select().single();\n        if (projectError) {\n            console.error(\"案件作成エラー:\", projectError);\n            // required_contractorsカラムが存在しない場合の特別な処理\n            if (projectError.message.includes(\"required_contractors\")) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    message: \"データベーススキーマが古いです。required_contractorsカラムを追加してください。\",\n                    error: projectError.message,\n                    suggestion: \"SupabaseのSQLエディタでadd-required-contractors-column.sqlを実行してください。\"\n                }, {\n                    status: 500\n                });\n            }\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"案件の作成に失敗しました: \" + projectError.message\n            }, {\n                status: 400\n            });\n        }\n        // 承認が必要な場合、承認者に通知を送信\n        if (approvalRequired && approver_id) {\n            try {\n                // 承認者のメンバーシップを取得\n                const { data: approverMembership, error: approverMembershipError } = await supabaseAdmin.from(\"memberships\").select(\"user_id\").eq(\"user_id\", approver_id).eq(\"org_id\", company.id).single();\n                if (approverMembership && !approverMembershipError) {\n                    // 承認通知を作成\n                    const { error: notificationError } = await supabaseAdmin.from(\"notifications\").insert({\n                        user_id: approver_id,\n                        type: \"project_approval_requested\",\n                        title: \"案件承認依頼\",\n                        message: `案件「${title}」の承認をお願いします。`,\n                        data: {\n                            project_id: projectData.id,\n                            project_title: title,\n                            requester_id: userProfile.id,\n                            requester_name: userProfile.display_name\n                        }\n                    });\n                    if (notificationError) {\n                        console.error(\"承認通知の送信に失敗:\", notificationError);\n                    }\n                }\n            } catch (notificationError) {\n                console.error(\"承認通知処理エラー:\", notificationError);\n            // 通知エラーは案件作成を妨げない\n            }\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: approvalRequired ? \"案件が作成されました。承認待ちです。\" : \"案件が正常に作成されました\",\n            project: projectData,\n            requires_approval: approvalRequired\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"案件作成エラー:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"サーバーエラーが発生しました\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        // Authorizationヘッダーからユーザー情報を取得\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証が必要です\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.replace(\"Bearer \", \"\");\n        const { data: { user }, error: authError } = await supabaseAdmin.auth.getUser(token);\n        if (authError || !user) {\n            console.error(\"projects API: 認証エラー:\", authError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証に失敗しました: \" + (authError?.message || \"ユーザーが見つかりません\")\n            }, {\n                status: 401\n            });\n        }\n        // まず、usersテーブルでユーザーが存在するか確認\n        const { data: userProfile, error: userError } = await supabaseAdmin.from(\"users\").select(\"id, email, display_name\").eq(\"auth_user_id\", user.id).single();\n        if (userError || !userProfile) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"ユーザープロフィールが見つかりません。デモアカウントを再作成してください。\"\n            }, {\n                status: 403\n            });\n        }\n        // ユーザーの組織情報を取得\n        const { data: memberships, error: membershipError } = await supabaseAdmin.from(\"memberships\").select(`\n        org_id,\n        role,\n        organizations (\n          id,\n          name\n        )\n      `).eq(\"user_id\", userProfile.id);\n        if (membershipError || !memberships || memberships.length === 0) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                projects: []\n            }, {\n                status: 200\n            });\n        }\n        // OrgAdminのメンバーシップを探す\n        const membership = memberships.find((m)=>m.role === \"OrgAdmin\");\n        if (!membership) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                projects: []\n            }, {\n                status: 200\n            });\n        }\n        const company = membership.organizations;\n        // クエリパラメータを取得\n        const { searchParams } = new URL(request.url);\n        const statusFilter = searchParams.get(\"status\");\n        // 組織の案件データを取得（会社間分離）\n        let query = supabaseAdmin.from(\"projects\").select(\"*\").eq(\"org_id\", company.id) // 組織IDでフィルタリング\n        ;\n        // ステータスフィルタを適用\n        if (statusFilter) {\n            query = query.eq(\"status\", statusFilter);\n        }\n        const { data: projectsData, error: projectsError } = await query.order(\"created_at\", {\n            ascending: false\n        });\n        if (projectsError) {\n            console.error(\"案件データの取得に失敗:\", projectsError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"案件データの取得に失敗しました\"\n            }, {\n                status: 400\n            });\n        }\n        // 受注者情報を取得\n        const contractorIds = Array.from(new Set(projectsData?.map((p)=>p.contractor_id).filter(Boolean) || []));\n        let contractorMap = {};\n        if (contractorIds.length > 0) {\n            const { data: contractors } = await supabaseAdmin.from(\"users\").select(\"id, display_name, email\").in(\"id\", contractorIds);\n            contractorMap = contractors?.reduce((acc, contractor)=>{\n                acc[contractor.id] = contractor;\n                return acc;\n            }, {}) || {};\n        }\n        // 契約情報を取得（複数受注者対応）\n        const projectIds = projectsData?.map((p)=>p.id) || [];\n        let contractMap = {};\n        if (projectIds.length > 0) {\n            const { data: contracts } = await supabaseAdmin.from(\"contracts\").select(`\n          project_id,\n          contractor_id,\n          bid_amount,\n          status,\n          created_at,\n          updated_at\n        `).in(\"project_id\", projectIds).eq(\"status\", \"signed\") // 署名済み契約のみ\n            ;\n            // 受注者情報を取得\n            const contractorIds = [\n                ...new Set(contracts?.map((c)=>c.contractor_id) || [])\n            ];\n            let contractorMap = {};\n            if (contractorIds.length > 0) {\n                const { data: contractors } = await supabaseAdmin.from(\"users\").select(\"id, display_name, email\").in(\"id\", contractorIds);\n                contractorMap = contractors?.reduce((acc, contractor)=>{\n                    acc[contractor.id] = contractor;\n                    return acc;\n                }, {}) || {};\n            }\n            // プロジェクトごとに契約をグループ化（受注者IDで重複排除。最新の契約のみ残す）\n            contractMap = (contracts || []).reduce((acc, contract)=>{\n                if (!acc[contract.project_id]) {\n                    acc[contract.project_id] = new Map();\n                }\n                const map = acc[contract.project_id];\n                const existing = map.get(String(contract.contractor_id));\n                const existingTime = existing ? new Date(existing.updated_at || existing.created_at).getTime() : -1;\n                const currentTime = new Date(contract.updated_at || contract.created_at).getTime();\n                if (!existing || currentTime >= existingTime) {\n                    map.set(String(contract.contractor_id), {\n                        contractor_id: contract.contractor_id,\n                        contract_amount: contract.bid_amount,\n                        contractor_name: contractorMap[contract.contractor_id]?.display_name || \"不明な受注者\",\n                        contractor_email: contractorMap[contract.contractor_id]?.email || \"\",\n                        created_at: contract.created_at,\n                        updated_at: contract.updated_at\n                    });\n                }\n                return acc;\n            }, {});\n            // Mapを配列に変換\n            Object.keys(contractMap).forEach((projectId)=>{\n                const values = Array.from(contractMap[projectId].values());\n                // 表示の安定化のため更新日時の降順で並べる\n                values.sort((a, b)=>new Date(b.updated_at || b.created_at).getTime() - new Date(a.updated_at || a.created_at).getTime());\n                contractMap[projectId] = values;\n            });\n        }\n        const formattedProjects = projectsData?.map((project)=>{\n            // 期限切れチェック（その日の終わり23:59:59まで有効）\n            const now = new Date();\n            const deadline = project.bidding_deadline ? new Date(project.bidding_deadline) : null;\n            let isExpired = false;\n            if (deadline && project.status === \"bidding\") {\n                // 締切日の23:59:59まで有効にする\n                const endOfDeadlineDay = new Date(deadline);\n                endOfDeadlineDay.setHours(23, 59, 59, 999);\n                isExpired = now > endOfDeadlineDay;\n            }\n            // 期限までの日数を計算（その日の終わりまで考慮）\n            let daysUntilDeadline = null;\n            if (deadline) {\n                const endOfDeadlineDay = new Date(deadline);\n                endOfDeadlineDay.setHours(23, 59, 59, 999);\n                daysUntilDeadline = Math.ceil((endOfDeadlineDay.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));\n            }\n            const result = {\n                id: project.id,\n                title: project.title,\n                description: project.description,\n                status: project.status,\n                budget: project.budget,\n                start_date: project.start_date,\n                end_date: project.end_date,\n                contractor_id: project.contractor_id,\n                contractor_name: contractorMap[project.contractor_id]?.display_name || \"未割当\",\n                contractor_email: contractorMap[project.contractor_id]?.email || \"\",\n                progress: Math.floor(Math.random() * 100),\n                category: project.category || \"道路設計\",\n                assignee_name: project.assignee_name,\n                created_at: project.created_at,\n                bidding_deadline: project.bidding_deadline,\n                required_contractors: project.required_contractors || 1,\n                is_expired: isExpired,\n                days_until_deadline: daysUntilDeadline,\n                contracts: contractMap[project.id] || [] // 複数受注者の契約情報\n            };\n            return result;\n        }) || [];\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            projects: formattedProjects\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"案件取得エラー:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"サーバーエラーが発生しました\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/projects/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();