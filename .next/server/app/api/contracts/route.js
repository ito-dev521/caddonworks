"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/contracts/route";
exports.ids = ["app/api/contracts/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontracts%2Froute&page=%2Fapi%2Fcontracts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontracts%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontracts%2Froute&page=%2Fapi%2Fcontracts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontracts%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_sayuri_caddonworks_src_app_api_contracts_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/contracts/route.ts */ \"(rsc)/./src/app/api/contracts/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/contracts/route\",\n        pathname: \"/api/contracts\",\n        filename: \"route\",\n        bundlePath: \"app/api/contracts/route\"\n    },\n    resolvedPagePath: \"/Users/sayuri/caddonworks/src/app/api/contracts/route.ts\",\n    nextConfigOutput,\n    userland: _Users_sayuri_caddonworks_src_app_api_contracts_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/contracts/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjb250cmFjdHMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmNvbnRyYWN0cyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNvbnRyYWN0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNheXVyaSUyRmNhZGRvbndvcmtzJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnNheXVyaSUyRmNhZGRvbndvcmtzJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ1E7QUFDckY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaXZpbC1lbmdpbmVlcmluZy1wbGF0Zm9ybS8/OTY0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc2F5dXJpL2NhZGRvbndvcmtzL3NyYy9hcHAvYXBpL2NvbnRyYWN0cy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY29udHJhY3RzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY29udHJhY3RzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jb250cmFjdHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvc2F5dXJpL2NhZGRvbndvcmtzL3NyYy9hcHAvYXBpL2NvbnRyYWN0cy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jb250cmFjdHMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontracts%2Froute&page=%2Fapi%2Fcontracts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontracts%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/contracts/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/contracts/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://rxnozwuamddqlcwysxag.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { project_id, bid_id, contract_amount, start_date, end_date, contractor_id, org_id } = body;\n        if (!project_id || !bid_id || !contract_amount || !start_date || !end_date || !contractor_id || !org_id) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"必須項目が入力されていません\"\n            }, {\n                status: 400\n            });\n        }\n        // Authorizationヘッダーからユーザー情報を取得\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証が必要です\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.replace(\"Bearer \", \"\");\n        const { data: { user }, error: authError } = await supabaseAdmin.auth.getUser(token);\n        if (authError || !user) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証に失敗しました\"\n            }, {\n                status: 401\n            });\n        }\n        // ユーザープロフィールを取得\n        const { data: userProfile, error: userError } = await supabaseAdmin.from(\"users\").select(\"id, display_name\").eq(\"auth_user_id\", user.id).single();\n        if (userError || !userProfile) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"ユーザープロフィールが見つかりません\"\n            }, {\n                status: 403\n            });\n        }\n        // 発注者権限をチェック\n        const { data: memberships, error: membershipError } = await supabaseAdmin.from(\"memberships\").select(\"role, org_id\").eq(\"user_id\", userProfile.id);\n        if (membershipError || !memberships || memberships.length === 0) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"組織情報の取得に失敗しました\"\n            }, {\n                status: 403\n            });\n        }\n        const orgMembership = memberships.find((m)=>m.role === \"OrgAdmin\");\n        if (!orgMembership) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"この操作を実行する権限がありません（発注者権限が必要です）\"\n            }, {\n                status: 403\n            });\n        }\n        // 案件情報を取得\n        const { data: project, error: projectError } = await supabaseAdmin.from(\"projects\").select(\"id, title, org_id\").eq(\"id\", project_id).eq(\"org_id\", orgMembership.org_id).single();\n        if (projectError || !project) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"案件が見つかりません\"\n            }, {\n                status: 404\n            });\n        }\n        // 受注者情報を取得\n        const { data: contractor, error: contractorError } = await supabaseAdmin.from(\"users\").select(\"id, display_name, email\").eq(\"id\", contractor_id).single();\n        if (contractorError || !contractor) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"受注者情報が見つかりません\"\n            }, {\n                status: 404\n            });\n        }\n        // 契約データを作成\n        const { data: contractData, error: contractError } = await supabaseAdmin.from(\"contracts\").insert({\n            project_id,\n            org_id: orgMembership.org_id,\n            contractor_id,\n            bid_id,\n            contract_amount: Number(contract_amount),\n            start_date,\n            end_date,\n            status: \"pending\"\n        }).select().single();\n        if (contractError) {\n            console.error(\"契約作成エラー:\", contractError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"契約の作成に失敗しました: \" + contractError.message\n            }, {\n                status: 400\n            });\n        }\n        // 案件のステータスを更新\n        await supabaseAdmin.from(\"projects\").update({\n            status: \"contract_pending\",\n            contractor_id: contractor_id\n        }).eq(\"id\", project_id);\n        // 受注者に契約書作成通知を送信\n        const { data: contractorUser, error: contractorUserError } = await supabaseAdmin.from(\"users\").select(\"id, display_name\").eq(\"id\", contractor_id).single();\n        if (!contractorUserError && contractorUser) {\n            await supabaseAdmin.from(\"notifications\").insert({\n                user_id: contractorUser.id,\n                type: \"contract_created\",\n                title: \"新しい契約書が作成されました\",\n                message: `案件「${project.title}」の契約書が作成されました。内容を確認し、署名してください。`,\n                data: {\n                    project_id,\n                    contract_id: contractData.id,\n                    org_id: orgMembership.org_id,\n                    org_name: (await supabaseAdmin.from(\"organizations\").select(\"name\").eq(\"id\", orgMembership.org_id).single()).data?.name\n                }\n            });\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"契約書が正常に作成されました\",\n            contract: contractData\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"契約作成エラー:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"サーバーエラーが発生しました\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        console.log(\"contracts API: リクエスト開始\");\n        // Authorizationヘッダーからユーザー情報を取得\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader) {\n            console.log(\"contracts API: 認証ヘッダーなし\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証が必要です\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.replace(\"Bearer \", \"\");\n        console.log(\"contracts API: トークン取得\", {\n            tokenLength: token.length\n        });\n        const { data: { user }, error: authError } = await supabaseAdmin.auth.getUser(token);\n        if (authError || !user) {\n            console.error(\"contracts API: 認証エラー\", {\n                authError: authError?.message,\n                hasUser: !!user\n            });\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証に失敗しました\"\n            }, {\n                status: 401\n            });\n        }\n        console.log(\"contracts API: 認証成功\", {\n            userId: user.id\n        });\n        // ユーザープロフィールを取得\n        console.log(\"contracts API: ユーザープロフィール取得開始\");\n        const { data: userProfile, error: userError } = await supabaseAdmin.from(\"users\").select(\"id\").eq(\"auth_user_id\", user.id).single();\n        if (userError || !userProfile) {\n            console.error(\"contracts API: ユーザープロフィール取得エラー\", {\n                userError: userError?.message,\n                hasProfile: !!userProfile\n            });\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"ユーザープロフィールが見つかりません\"\n            }, {\n                status: 403\n            });\n        }\n        console.log(\"contracts API: ユーザープロフィール取得成功\", {\n            profileId: userProfile.id\n        });\n        // ユーザーのロールと組織IDを取得\n        console.log(\"contracts API: メンバーシップ取得開始\");\n        const { data: memberships, error: membershipError } = await supabaseAdmin.from(\"memberships\").select(\"org_id, role\").eq(\"user_id\", userProfile.id);\n        if (membershipError || !memberships || memberships.length === 0) {\n            console.error(\"contracts API: メンバーシップ取得エラー\", {\n                membershipError: membershipError?.message,\n                membershipsCount: memberships?.length\n            });\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"組織情報が見つかりません\"\n            }, {\n                status: 403\n            });\n        }\n        console.log(\"contracts API: メンバーシップ取得成功\", {\n            membershipsCount: memberships.length\n        });\n        let contractsData = [];\n        let contractsError = null;\n        // OrgAdminの場合、自分の組織の契約を取得\n        const orgAdminMembership = memberships.find((m)=>m.role === \"OrgAdmin\");\n        if (orgAdminMembership) {\n            console.log(\"contracts API: OrgAdminとして契約取得開始\", {\n                orgId: orgAdminMembership.org_id\n            });\n            // まず基本的な契約データを取得\n            const { data: contractsBasic, error: contractsBasicError } = await supabaseAdmin.from(\"contracts\").select(\"*\").eq(\"org_id\", orgAdminMembership.org_id).order(\"created_at\", {\n                ascending: false\n            });\n            if (contractsBasicError) {\n                console.error(\"contracts API: 基本契約データ取得エラー\", contractsBasicError);\n                contractsData = [];\n                contractsError = contractsBasicError;\n            } else {\n                console.log(\"contracts API: 基本契約データ取得成功\", {\n                    contractsCount: contractsBasic?.length\n                });\n                // 関連データを個別に取得\n                const projectIds = [\n                    ...new Set(contractsBasic?.map((c)=>c.project_id) || [])\n                ];\n                const contractorIds = [\n                    ...new Set(contractsBasic?.map((c)=>c.contractor_id) || [])\n                ];\n                // 案件情報を取得\n                let projectMap = {};\n                if (projectIds.length > 0) {\n                    const { data: projects } = await supabaseAdmin.from(\"projects\").select(\"id, title\").in(\"id\", projectIds);\n                    projectMap = projects?.reduce((acc, project)=>{\n                        acc[project.id] = project;\n                        return acc;\n                    }, {}) || {};\n                }\n                // 組織情報を取得\n                const { data: orgData } = await supabaseAdmin.from(\"organizations\").select(\"id, name\").eq(\"id\", orgAdminMembership.org_id).single();\n                // 受注者情報を取得\n                let contractorMap = {};\n                if (contractorIds.length > 0) {\n                    const { data: contractors } = await supabaseAdmin.from(\"users\").select(\"id, display_name, email\").in(\"id\", contractorIds);\n                    contractorMap = contractors?.reduce((acc, contractor)=>{\n                        acc[contractor.id] = contractor;\n                        return acc;\n                    }, {}) || {};\n                }\n                // データを結合\n                contractsData = contractsBasic?.map((contract)=>({\n                        ...contract,\n                        projects: projectMap[contract.project_id],\n                        organizations: orgData,\n                        contractors: contractorMap[contract.contractor_id]\n                    })) || [];\n                contractsError = null;\n            }\n            console.log(\"contracts API: OrgAdmin契約取得結果\", {\n                contractsCount: contractsData?.length,\n                error: contractsError?.message\n            });\n        } else if (memberships.some((m)=>m.role === \"Contractor\")) {\n            console.log(\"contracts API: Contractorとして契約取得開始\", {\n                contractorId: userProfile.id\n            });\n            // まず基本的な契約データを取得\n            const { data: contractsBasic, error: contractsBasicError } = await supabaseAdmin.from(\"contracts\").select(\"*\").eq(\"contractor_id\", userProfile.id).order(\"created_at\", {\n                ascending: false\n            });\n            if (contractsBasicError) {\n                console.error(\"contracts API: 基本契約データ取得エラー\", contractsBasicError);\n                contractsData = [];\n                contractsError = contractsBasicError;\n            } else {\n                console.log(\"contracts API: 基本契約データ取得成功\", {\n                    contractsCount: contractsBasic?.length\n                });\n                // 関連データを個別に取得\n                const projectIds = [\n                    ...new Set(contractsBasic?.map((c)=>c.project_id) || [])\n                ];\n                const orgIds = [\n                    ...new Set(contractsBasic?.map((c)=>c.org_id) || [])\n                ];\n                // 案件情報を取得\n                let projectMap = {};\n                if (projectIds.length > 0) {\n                    const { data: projects } = await supabaseAdmin.from(\"projects\").select(\"id, title\").in(\"id\", projectIds);\n                    projectMap = projects?.reduce((acc, project)=>{\n                        acc[project.id] = project;\n                        return acc;\n                    }, {}) || {};\n                }\n                // 組織情報を取得\n                let orgMap = {};\n                if (orgIds.length > 0) {\n                    const { data: organizations } = await supabaseAdmin.from(\"organizations\").select(\"id, name\").in(\"id\", orgIds);\n                    orgMap = organizations?.reduce((acc, org)=>{\n                        acc[org.id] = org;\n                        return acc;\n                    }, {}) || {};\n                }\n                // 受注者情報を取得\n                const { data: contractorData } = await supabaseAdmin.from(\"users\").select(\"id, display_name, email\").eq(\"id\", userProfile.id).single();\n                // データを結合\n                contractsData = contractsBasic?.map((contract)=>({\n                        ...contract,\n                        projects: projectMap[contract.project_id],\n                        organizations: orgMap[contract.org_id],\n                        contractors: contractorData\n                    })) || [];\n                contractsError = null;\n            }\n            console.log(\"contracts API: Contractor契約取得結果\", {\n                contractsCount: contractsData?.length,\n                error: contractsError?.message\n            });\n        } else {\n            console.log(\"contracts API: 権限なし\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"この操作を実行する権限がありません\"\n            }, {\n                status: 403\n            });\n        }\n        if (contractsError) {\n            console.error(\"契約取得エラー:\", contractsError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"契約の取得に失敗しました\"\n            }, {\n                status: 500\n            });\n        }\n        const formattedContracts = contractsData?.map((contract)=>({\n                ...contract,\n                project_title: contract.projects?.title,\n                org_name: contract.organizations?.name,\n                contractor_name: contract.contractors?.display_name,\n                contractor_email: contract.contractors?.email\n            })) || [];\n        console.log(\"contracts API: レスポンス準備完了\", {\n            contractsCount: formattedContracts.length\n        });\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            contracts: formattedContracts\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"contracts API: サーバーエラー:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"サーバーエラーが発生しました\",\n            error: error instanceof Error ? error.message : \"不明なエラー\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/contracts/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcontracts%2Froute&page=%2Fapi%2Fcontracts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcontracts%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();