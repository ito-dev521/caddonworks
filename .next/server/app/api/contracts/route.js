"use strict";(()=>{var e={};e.id=8326,e.ids=[8326],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},59796:e=>{e.exports=require("zlib")},17252:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>f,originalPathname:()=>h,patchFetch:()=>A,requestAsyncStorage:()=>g,routeModule:()=>u,serverHooks:()=>p,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>_});var o={};r.r(o),r.d(o,{GET:()=>d,POST:()=>l});var s=r(95419),a=r(69108),n=r(99678),i=r(78070);let c=(0,r(32409).eI)("https://rxnozwuamddqlcwysxag.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY,{auth:{autoRefreshToken:!1,persistSession:!1}});async function l(e){try{let{project_id:t,bid_id:r,contract_amount:o,start_date:s,end_date:a,contractor_id:n,org_id:l}=await e.json();if(!t||!r||!o||!s||!a||!n||!l)return i.Z.json({message:"必須項目が入力されていません"},{status:400});let d=e.headers.get("authorization");if(!d)return i.Z.json({message:"認証が必要です"},{status:401});let u=d.replace("Bearer ",""),{data:{user:g},error:m}=await c.auth.getUser(u);if(m||!g)return i.Z.json({message:"認証に失敗しました"},{status:401});let{data:p,error:f}=await c.from("users").select("id, display_name").eq("auth_user_id",g.id).single();if(f||!p)return i.Z.json({message:"ユーザープロフィールが見つかりません"},{status:403});let{data:_,error:h}=await c.from("memberships").select("role, org_id").eq("user_id",p.id);if(h||!_||0===_.length)return i.Z.json({message:"組織情報の取得に失敗しました"},{status:403});let A=_.find(e=>"OrgAdmin"===e.role);if(!A)return i.Z.json({message:"この操作を実行する権限がありません（発注者権限が必要です）"},{status:403});let{data:j,error:w}=await c.from("projects").select("id, title, org_id").eq("id",t).eq("org_id",A.org_id).single();if(w||!j)return i.Z.json({message:"案件が見つかりません"},{status:404});let{data:P,error:I}=await c.from("users").select("id, display_name, email").eq("id",n).single();if(I||!P)return i.Z.json({message:"受注者情報が見つかりません"},{status:404});let{data:q,error:y}=await c.from("contracts").insert({project_id:t,org_id:A.org_id,contractor_id:n,contract_title:j.title,contract_content:`案件「${j.title}」の契約書

契約金額: \xa5${Number(o).toLocaleString()}
契約期間: ${s} - ${a}

受注者: ${P.display_name}
発注者: ${A.org_id}`,bid_amount:Number(o),start_date:s,end_date:a,status:"pending_contractor"}).select().single();if(y)return console.error("契約作成エラー:",y),i.Z.json({message:"契約の作成に失敗しました: "+y.message},{status:400});await c.from("projects").update({status:"contract_pending",contractor_id:n}).eq("id",t);let{data:Z,error:x}=await c.from("users").select("id, display_name").eq("id",n).single();return!x&&Z&&await c.from("notifications").insert({user_id:Z.id,type:"contract_created",title:"新しい契約書が作成されました",message:`案件「${j.title}」の契約書が作成されました。内容を確認し、署名してください。`,data:{project_id:t,contract_id:q.id,org_id:A.org_id,org_name:(await c.from("organizations").select("name").eq("id",A.org_id).single()).data?.name}}),i.Z.json({message:"契約書が正常に作成されました",contract:q},{status:201})}catch(e){return console.error("契約作成エラー:",e),i.Z.json({message:"サーバーエラーが発生しました"},{status:500})}}async function d(e){try{console.log("contracts API: リクエスト開始");let t=e.headers.get("authorization");if(!t)return console.log("contracts API: 認証ヘッダーなし"),i.Z.json({message:"認証が必要です"},{status:401});let r=t.replace("Bearer ","");console.log("contracts API: トークン取得",{tokenLength:r.length});let{data:{user:o},error:s}=await c.auth.getUser(r);if(s||!o)return console.error("contracts API: 認証エラー",{authError:s?.message,hasUser:!!o}),i.Z.json({message:"認証に失敗しました"},{status:401});console.log("contracts API: 認証成功",{userId:o.id}),console.log("contracts API: ユーザープロフィール取得開始");let{data:a,error:n}=await c.from("users").select("id").eq("auth_user_id",o.id).single();if(n||!a)return console.error("contracts API: ユーザープロフィール取得エラー",{userError:n?.message,hasProfile:!!a}),i.Z.json({message:"ユーザープロフィールが見つかりません"},{status:403});console.log("contracts API: ユーザープロフィール取得成功",{profileId:a.id}),console.log("contracts API: メンバーシップ取得開始");let{data:l,error:d}=await c.from("memberships").select("org_id, role").eq("user_id",a.id);if(d||!l||0===l.length)return console.error("contracts API: メンバーシップ取得エラー",{membershipError:d?.message,membershipsCount:l?.length}),i.Z.json({message:"組織情報が見つかりません"},{status:403});console.log("contracts API: メンバーシップ取得成功",{membershipsCount:l.length});let u=[],g=null,m=l.find(e=>"OrgAdmin"===e.role);if(m){console.log("contracts API: OrgAdminとして契約取得開始",{orgId:m.org_id});let{data:e,error:t}=await c.from("contracts").select("*").eq("org_id",m.org_id).order("created_at",{ascending:!1});if(t)console.error("contracts API: 基本契約データ取得エラー",t),u=[],g=t;else{console.log("contracts API: 基本契約データ取得成功",{contractsCount:e?.length});let t=Array.from(new Set(e?.map(e=>e.project_id)||[])),r=Array.from(new Set(e?.map(e=>e.contractor_id)||[])),o={};if(t.length>0){let{data:e}=await c.from("projects").select("id, title").in("id",t);o=e?.reduce((e,t)=>(e[t.id]=t,e),{})||{}}let{data:s}=await c.from("organizations").select("id, name").eq("id",m.org_id).single(),a={};if(r.length>0){let{data:e}=await c.from("users").select("id, display_name, email").in("id",r);a=e?.reduce((e,t)=>(e[t.id]=t,e),{})||{}}u=e?.map(e=>({...e,projects:o[e.project_id],organizations:s,contractors:a[e.contractor_id]}))||[],g=null}console.log("contracts API: OrgAdmin契約取得結果",{contractsCount:u?.length,error:g?.message})}else{if(!l.some(e=>"Contractor"===e.role))return console.log("contracts API: 権限なし"),i.Z.json({message:"この操作を実行する権限がありません"},{status:403});console.log("contracts API: Contractorとして契約取得開始",{contractorId:a.id});let{data:e,error:t}=await c.from("contracts").select("*").eq("contractor_id",a.id).order("created_at",{ascending:!1});if(t)console.error("contracts API: 基本契約データ取得エラー",t),u=[],g=t;else{console.log("contracts API: 基本契約データ取得成功",{contractsCount:e?.length});let t=Array.from(new Set(e?.map(e=>e.project_id)||[])),r=Array.from(new Set(e?.map(e=>e.org_id)||[])),o={};if(t.length>0){let{data:e}=await c.from("projects").select("id, title").in("id",t);o=e?.reduce((e,t)=>(e[t.id]=t,e),{})||{}}let s={};if(r.length>0){let{data:e}=await c.from("organizations").select("id, name").in("id",r);s=e?.reduce((e,t)=>(e[t.id]=t,e),{})||{}}let{data:n}=await c.from("users").select("id, display_name, email").eq("id",a.id).single();u=e?.map(e=>({...e,projects:o[e.project_id],organizations:s[e.org_id],contractors:n}))||[],g=null}console.log("contracts API: Contractor契約取得結果",{contractsCount:u?.length,error:g?.message})}if(g)return console.error("契約取得エラー:",g),i.Z.json({message:"契約の取得に失敗しました"},{status:500});let p=u?.map(e=>({...e,project_title:e.projects?.title||e.contract_title,org_name:e.organizations?.name,contractor_name:e.contractors?.display_name,contractor_email:e.contractors?.email}))||[];return console.log("contracts API: レスポンス準備完了",{contractsCount:p.length}),i.Z.json({contracts:p},{status:200})}catch(e){return console.error("contracts API: サーバーエラー:",e),i.Z.json({message:"サーバーエラーが発生しました",error:e instanceof Error?e.message:"不明なエラー"},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/contracts/route",pathname:"/api/contracts",filename:"route",bundlePath:"app/api/contracts/route"},resolvedPagePath:"/Users/sayuri/caddonworks/src/app/api/contracts/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:g,staticGenerationAsyncStorage:m,serverHooks:p,headerHooks:f,staticGenerationBailout:_}=u,h="/api/contracts/route";function A(){return(0,n.patchFetch)({serverHooks:p,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[1638,6206,2409],()=>r(17252));module.exports=o})();