"use strict";(()=>{var e={};e.id=4204,e.ids=[4204],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},59796:e=>{e.exports=require("zlib")},54579:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>p,originalPathname:()=>m,patchFetch:()=>j,requestAsyncStorage:()=>u,routeModule:()=>c,serverHooks:()=>_,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>b});var o={};r.r(o),r.d(o,{GET:()=>l});var s=r(95419),a=r(69108),i=r(99678),n=r(78070);let d=(0,r(32409).eI)("https://rxnozwuamddqlcwysxag.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY,{auth:{autoRefreshToken:!1,persistSession:!1}});async function l(e){try{console.log("jobs API: リクエスト開始");let t=e.headers.get("authorization");if(console.log("jobs API: 認証ヘッダー",t?"あり":"なし"),!t)return console.log("jobs API: 認証ヘッダーなし"),n.Z.json({message:"認証が必要です"},{status:401});let r=t.replace("Bearer ","");console.log("jobs API: トークン取得完了",r.substring(0,20)+"...");let{data:{user:o},error:s}=await d.auth.getUser(r);if(s||!o)return console.error("jobs API: 認証エラー:",s),n.Z.json({message:"認証に失敗しました: "+(s?.message||"ユーザーが見つかりません")},{status:401});console.log("jobs API: 認証成功, ユーザーID:",o.id,"Email:",o.email);let{data:a,error:i}=await d.from("users").select("id, email, display_name, specialties, experience_years, member_level").eq("auth_user_id",o.id).single();if(i||!a)return console.error("jobs API: ユーザープロフィールエラー:",i),n.Z.json({message:"ユーザープロフィールが見つかりません"},{status:403});console.log("jobs API: ユーザープロフィール取得成功");let l=a.member_level||function(e,t){if(0===t.length||t.every(e=>"未経験"===e))return"beginner";let r=parseInt(e||"0",10);return r<3?"beginner":r<7?"intermediate":"advanced"}(a.experience_years,a.specialties||[]);console.log("jobs API: ユーザー会員レベル:",l);let{data:c,error:u}=await d.from("projects").select(`
        id,
        title,
        description,
        status,
        budget,
        start_date,
        end_date,
        category,
        created_at,
        assignee_name,
        bidding_deadline,
        requirements,
        location,
        org_id,
        required_contractors,
        contractor_id,
        required_level
      `).eq("status","bidding").order("created_at",{ascending:!1}),{data:g,error:_}=await d.from("contracts").select(`
        project_id,
        status,
        projects (
          id,
          title,
          description,
          status,
          budget,
          start_date,
          end_date,
          category,
          created_at,
          assignee_name,
          bidding_deadline,
          requirements,
          location,
          org_id,
          required_contractors,
          contractor_id,
          required_level
        )
      `).eq("status","signed").eq("contractor_id",a.id);if(u||_)return console.error("jobs API: 案件データ取得エラー:",{biddingError:u,contractsError:_}),n.Z.json({message:"案件データの取得に失敗しました"},{status:400});let p=g?.map(e=>e.projects).filter(Boolean)||[];console.log("jobs API: データ取得結果",{biddingJobsCount:c?.length||0,contractsCount:g?.length||0,awardedJobsCount:p?.length||0});let b=c?.filter(e=>{let t=e.required_level||"beginner";return function(e,t){let r=["beginner","intermediate","advanced"];return r.indexOf(e)>=r.indexOf(t)}(l,t)})||[];console.log("jobs API: レベルフィルタリング結果",{originalBiddingJobs:c?.length||0,filteredBiddingJobs:b.length});let m=[...b,...p];console.log("jobs API: 案件データ取得成功, 件数:",m?.length||0);let j=Array.from(new Set(m?.map(e=>e.org_id)||[])),{data:q}=await d.from("organizations").select("id, name").in("id",j),f=q?.reduce((e,t)=>(e[t.id]=t.name,e),{})||{},h=m?.map(e=>e.id)||[],{data:A}=await d.from("bids").select("project_id").in("project_id",h).eq("status","submitted"),P=A?.reduce((e,t)=>(e[t.project_id]=(e[t.project_id]||0)+1,e),{})||{},v=m?.map(e=>{let t=P[e.id]||0,r=t>=(e.required_contractors||1);return{id:e.id,title:e.title,description:e.description,status:e.status,budget:e.budget,start_date:e.start_date,end_date:e.end_date,category:e.category||"道路設計",created_at:e.created_at,org_name:f[e.org_id]||"不明な組織",org_id:e.org_id,assignee_name:e.assignee_name,bidding_deadline:e.bidding_deadline,requirements:e.requirements,location:e.location,required_contractors:e.required_contractors||1,required_level:e.required_level||"beginner",current_bid_count:t,is_full:r,can_bid:!r&&"bidding"===e.status}})||[];return console.log("jobs API: レスポンス準備完了"),n.Z.json({jobs:v},{status:200})}catch(e){return console.error("jobs API: サーバーエラー:",e),n.Z.json({message:"サーバーエラーが発生しました: "+(e instanceof Error?e.message:"不明なエラー")},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/jobs/route",pathname:"/api/jobs",filename:"route",bundlePath:"app/api/jobs/route"},resolvedPagePath:"/Users/sayuri/caddonworks/src/app/api/jobs/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:u,staticGenerationAsyncStorage:g,serverHooks:_,headerHooks:p,staticGenerationBailout:b}=c,m="/api/jobs/route";function j(){return(0,i.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:g})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[1638,6206,2409],()=>r(54579));module.exports=o})();