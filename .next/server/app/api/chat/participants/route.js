"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/participants/route";
exports.ids = ["app/api/chat/participants/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Fparticipants%2Froute&page=%2Fapi%2Fchat%2Fparticipants%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Fparticipants%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Fparticipants%2Froute&page=%2Fapi%2Fchat%2Fparticipants%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Fparticipants%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_sayuri_caddonworks_src_app_api_chat_participants_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/chat/participants/route.ts */ \"(rsc)/./src/app/api/chat/participants/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/participants/route\",\n        pathname: \"/api/chat/participants\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/participants/route\"\n    },\n    resolvedPagePath: \"/Users/sayuri/caddonworks/src/app/api/chat/participants/route.ts\",\n    nextConfigOutput,\n    userland: _Users_sayuri_caddonworks_src_app_api_chat_participants_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/chat/participants/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcGFydGljaXBhbnRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcGFydGljaXBhbnRzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnBhcnRpY2lwYW50cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNheXVyaSUyRmNhZGRvbndvcmtzJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnNheXVyaSUyRmNhZGRvbndvcmtzJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ2dCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDNko7O0FBRTdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2l2aWwtZW5naW5lZXJpbmctcGxhdGZvcm0vPzA2MzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3NheXVyaS9jYWRkb253b3Jrcy9zcmMvYXBwL2FwaS9jaGF0L3BhcnRpY2lwYW50cy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY2hhdC9wYXJ0aWNpcGFudHMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0L3BhcnRpY2lwYW50c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY2hhdC9wYXJ0aWNpcGFudHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvc2F5dXJpL2NhZGRvbndvcmtzL3NyYy9hcHAvYXBpL2NoYXQvcGFydGljaXBhbnRzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2NoYXQvcGFydGljaXBhbnRzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Fparticipants%2Froute&page=%2Fapi%2Fchat%2Fparticipants%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Fparticipants%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/chat/participants/route.ts":
/*!************************************************!*\
  !*** ./src/app/api/chat/participants/route.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const roomId = searchParams.get(\"room_id\");\n        if (!roomId) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"ルームIDが必要です\"\n            }, {\n                status: 400\n            });\n        }\n        // ルームIDからプロジェクトIDを抽出\n        const projectId = roomId.replace(\"project_\", \"\");\n        console.log(\"チャット参加者取得 - roomId:\", roomId, \"projectId:\", projectId);\n        // ユーザーの認証\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader) {\n            console.log(\"チャット参加者取得エラー: 認証ヘッダーなし\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証が必要です\"\n            }, {\n                status: 401\n            });\n        }\n        const supabaseAdmin = (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.createSupabaseAdmin)();\n        const token = authHeader.replace(\"Bearer \", \"\");\n        const { data: { user }, error: authError } = await supabaseAdmin.auth.getUser(token);\n        if (authError || !user) {\n            console.log(\"チャット参加者取得エラー: 認証失敗\", authError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"認証に失敗しました\"\n            }, {\n                status: 401\n            });\n        }\n        // ユーザープロフィールを取得\n        const { data: userProfile, error: userError } = await supabaseAdmin.from(\"users\").select(\"id, email, display_name\").eq(\"auth_user_id\", user.id).single();\n        if (userError || !userProfile) {\n            console.log(\"チャット参加者取得エラー: ユーザープロフィール取得失敗\", userError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"ユーザープロフィールが見つかりません\"\n            }, {\n                status: 403\n            });\n        }\n        console.log(\"チャット参加者取得 - ユーザープロフィール:\", userProfile.id, userProfile.email);\n        // プロジェクトの存在確認（created_byカラムが存在しない場合に備えて段階的に取得）\n        let project, projectError;\n        try {\n            // まず created_by / support_enabled を含めて取得を試行\n            const result = await supabaseAdmin.from(\"projects\").select(\"id, title, org_id, contractor_id, created_by, support_enabled\").eq(\"id\", projectId).single();\n            project = result.data;\n            projectError = result.error;\n        } catch (error) {\n            console.log(\"拡張カラム付き取得に失敗、最小列で再試行\");\n            // created_by / support_enabled が存在しない場合の代替取得\n            const result = await supabaseAdmin.from(\"projects\").select(\"id, title, org_id, contractor_id\").eq(\"id\", projectId).single();\n            project = result.data;\n            projectError = result.error;\n            // created_byがない場合はnullを設定\n            if (project) {\n                project.created_by = null;\n            }\n        }\n        if (projectError || !project) {\n            console.log(\"チャット参加者取得エラー: プロジェクト取得失敗\", {\n                projectId,\n                error: projectError,\n                project,\n                errorMessage: projectError?.message,\n                errorDetails: projectError?.details,\n                errorHint: projectError?.hint\n            });\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"プロジェクトが見つかりません\",\n                debug: {\n                    projectId,\n                    error: projectError?.message,\n                    details: projectError?.details\n                }\n            }, {\n                status: 404\n            });\n        }\n        console.log(\"チャット参加者取得 - プロジェクト情報:\", {\n            id: project.id,\n            title: project.title,\n            org_id: project.org_id,\n            contractor_id: project.contractor_id,\n            created_by: project.created_by\n        });\n        // アクセス権限をチェック\n        const { data: membership } = await supabaseAdmin.from(\"memberships\").select(\"org_id, role\").eq(\"user_id\", userProfile.id).single();\n        // 複数受注者対応：プロジェクト参加者としてのアクセス権限をチェック\n        const { data: projectParticipant } = await supabaseAdmin.from(\"project_participants\").select(\"id, role, status\").eq(\"project_id\", projectId).eq(\"user_id\", userProfile.id).single();\n        const hasAccess = membership?.org_id === project.org_id || project.contractor_id === userProfile.id || projectParticipant && projectParticipant.status === \"active\";\n        if (!hasAccess) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"このプロジェクトへのアクセス権限がありません\"\n            }, {\n                status: 403\n            });\n        }\n        // プロジェクトの基本参加者を取得（作成者・担当者・受注者・サポート）\n        const basicParticipants = [];\n        console.log(\"チャット参加者取得 - 基本参加者の取得開始\");\n        // 1. プロジェクト作成者を追加\n        if (project.created_by) {\n            console.log(\"チャット参加者取得 - プロジェクト作成者を取得:\", project.created_by);\n            const { data: creator } = await supabaseAdmin.from(\"users\").select(`\n          id, \n          display_name, \n          email, \n          avatar_url,\n          memberships!inner (\n            org_id,\n            role\n          )\n        `).eq(\"id\", project.created_by).eq(\"memberships.org_id\", project.org_id).single();\n            if (creator) {\n                console.log(\"チャット参加者取得 - プロジェクト作成者取得成功:\", creator.display_name, creator.email);\n                basicParticipants.push({\n                    id: creator.id,\n                    display_name: creator.display_name || creator.email,\n                    email: creator.email,\n                    avatar_url: creator.avatar_url,\n                    role: creator.memberships[0]?.role || \"Member\",\n                    joined_at: new Date().toISOString(),\n                    is_basic: true\n                });\n            } else {\n                console.log(\"チャット参加者取得 - プロジェクト作成者が見つかりません\");\n            }\n        } else {\n            console.log(\"チャット参加者取得 - プロジェクト作成者IDがありません。組織管理者を代替として取得します。\");\n            // created_byがない場合は、組織の管理者を代替として追加\n            const { data: orgAdmin } = await supabaseAdmin.from(\"users\").select(`\n          id, \n          display_name, \n          email, \n          avatar_url,\n          memberships!inner (\n            org_id,\n            role\n          )\n        `).eq(\"memberships.org_id\", project.org_id).eq(\"memberships.role\", \"OrgAdmin\").limit(1).single();\n            if (orgAdmin) {\n                console.log(\"チャット参加者取得 - 組織管理者を代替として追加:\", orgAdmin.display_name, orgAdmin.email);\n                basicParticipants.push({\n                    id: orgAdmin.id,\n                    display_name: orgAdmin.display_name || orgAdmin.email,\n                    email: orgAdmin.email,\n                    avatar_url: orgAdmin.avatar_url,\n                    role: orgAdmin.memberships[0]?.role || \"OrgAdmin\",\n                    joined_at: new Date().toISOString(),\n                    is_basic: true\n                });\n            } else {\n                console.log(\"チャット参加者取得 - 組織管理者も見つかりません\");\n            }\n        }\n        // 2. 受注者を追加\n        if (project.contractor_id) {\n            const { data: contractor } = await supabaseAdmin.from(\"users\").select(\"id, display_name, email, avatar_url\").eq(\"id\", project.contractor_id).single();\n            if (contractor) {\n                basicParticipants.push({\n                    id: contractor.id,\n                    display_name: contractor.display_name || contractor.email,\n                    email: contractor.email,\n                    avatar_url: contractor.avatar_url,\n                    role: \"Contractor\",\n                    joined_at: new Date().toISOString(),\n                    is_basic: true\n                });\n            }\n        }\n        // 3. プロジェクト参加者（複数受注者対応）を追加\n        const { data: projectParticipants } = await supabaseAdmin.from(\"project_participants\").select(`\n        user_id,\n        role,\n        status,\n        users!inner (\n          id,\n          display_name,\n          email,\n          avatar_url\n        )\n      `).eq(\"project_id\", projectId).eq(\"status\", \"active\");\n        if (projectParticipants) {\n            projectParticipants.forEach((pp)=>{\n                // 既に追加されていない場合のみ追加\n                if (!basicParticipants.some((bp)=>bp.id === pp.users.id)) {\n                    basicParticipants.push({\n                        id: pp.users.id,\n                        display_name: pp.users.display_name || pp.users.email,\n                        email: pp.users.email,\n                        avatar_url: pp.users.avatar_url,\n                        role: \"Contractor\",\n                        joined_at: new Date().toISOString(),\n                        is_basic: true\n                    });\n                }\n            });\n        }\n        // 4. 組織の担当者を追加（assignee_name が設定されている場合）\n        const { data: projectDetail } = await supabaseAdmin.from(\"projects\").select(\"assignee_name\").eq(\"id\", projectId).single();\n        if (projectDetail?.assignee_name) {\n            // assignee_name から該当するユーザーを検索\n            const { data: assignee } = await supabaseAdmin.from(\"users\").select(`\n          id,\n          display_name,\n          email,\n          avatar_url,\n          memberships!inner (\n            org_id,\n            role\n          )\n        `).eq(\"display_name\", projectDetail.assignee_name).eq(\"memberships.org_id\", project.org_id).single();\n            if (assignee && !basicParticipants.some((bp)=>bp.id === assignee.id)) {\n                basicParticipants.push({\n                    id: assignee.id,\n                    display_name: assignee.display_name || assignee.email,\n                    email: assignee.email,\n                    avatar_url: assignee.avatar_url,\n                    role: assignee.memberships[0]?.role || \"Member\",\n                    joined_at: new Date().toISOString(),\n                    is_basic: true\n                });\n            }\n        }\n        // 5. 運営サポートを追加（仕様：運営が作成するサポートメンバー）\n        //    - 条件: project.support_enabled=true または contract.support_enabled=true\n        //    - サポートメンバーの抽出: memberships.role IN ('Reviewer','Staff') のユーザー\n        let supportNeeded = false;\n        try {\n            supportNeeded = !!project.support_enabled;\n        } catch (_) {\n            supportNeeded = false;\n        }\n        if (!supportNeeded) {\n            // 契約側のフラグも確認\n            const { data: latestContract } = await supabaseAdmin.from(\"contracts\").select(\"id, support_enabled\").eq(\"project_id\", projectId).order(\"updated_at\", {\n                ascending: false\n            }).limit(1).maybeSingle();\n            supportNeeded = !!latestContract?.support_enabled;\n        }\n        if (supportNeeded) {\n            const { data: supportMembers } = await supabaseAdmin.from(\"users\").select(`\n          id,\n          display_name,\n          email,\n          avatar_url,\n          memberships!inner ( role )\n        `).in(\"memberships.role\", [\n                \"Reviewer\",\n                \"Staff\"\n            ]);\n            if (supportMembers && supportMembers.length > 0) {\n                supportMembers.forEach((u)=>{\n                    if (!basicParticipants.some((bp)=>bp.id === u.id)) {\n                        basicParticipants.push({\n                            id: u.id,\n                            display_name: u.display_name || u.email,\n                            email: u.email,\n                            avatar_url: u.avatar_url,\n                            role: \"Staff\",\n                            joined_at: new Date().toISOString(),\n                            is_basic: true\n                        });\n                    }\n                });\n            }\n        }\n        // チャットルームを取得または作成\n        let { data: chatRoom, error: roomError } = await supabaseAdmin.from(\"chat_rooms\").select(\"id\").eq(\"project_id\", projectId).single();\n        // 招待された参加者を取得\n        let invitedParticipants = [];\n        if (chatRoom) {\n            const { data: chatParticipants, error: chatParticipantsError } = await supabaseAdmin.from(\"chat_participants\").select(`\n          user_id,\n          role,\n          joined_at,\n          is_active,\n          users!inner (\n            id,\n            display_name,\n            email,\n            avatar_url\n          )\n        `).eq(\"room_id\", chatRoom.id).eq(\"is_active\", true);\n            if (!chatParticipantsError && chatParticipants) {\n                invitedParticipants = chatParticipants.filter((cp)=>!basicParticipants.some((bp)=>bp.id === cp.users.id)).map((participant)=>({\n                        id: participant.users.id,\n                        display_name: participant.users.display_name || participant.users.email,\n                        email: participant.users.email,\n                        avatar_url: participant.users.avatar_url,\n                        role: participant.role === \"owner\" ? \"OrgAdmin\" : \"Member\",\n                        joined_at: participant.joined_at,\n                        is_basic: false\n                    }));\n            }\n        }\n        // 基本参加者と招待参加者を結合\n        const allParticipants = [\n            ...basicParticipants,\n            ...invitedParticipants\n        ];\n        // 組織メンバーの役割情報を取得して更新\n        if (allParticipants.length > 0) {\n            const userIds = allParticipants.map((p)=>p.id);\n            const { data: memberships } = await supabaseAdmin.from(\"memberships\").select(\"user_id, role\").in(\"user_id\", userIds).eq(\"org_id\", project.org_id);\n            const membershipMap = new Map();\n            memberships?.forEach((m)=>{\n                membershipMap.set(m.user_id, m.role);\n            });\n            // 役割情報を更新（基本参加者の組織メンバーのみ）\n            allParticipants.forEach((participant)=>{\n                const orgRole = membershipMap.get(participant.id);\n                if (orgRole && participant.role !== \"Contractor\") {\n                    participant.role = orgRole;\n                }\n            });\n        }\n        console.log(\"チャット参加者取得 - 最終結果:\", {\n            basicParticipantsCount: basicParticipants.length,\n            invitedParticipantsCount: invitedParticipants.length,\n            totalParticipants: allParticipants.length,\n            participants: allParticipants.map((p)=>({\n                    id: p.id,\n                    email: p.email,\n                    role: p.role,\n                    is_basic: p.is_basic\n                }))\n        });\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            participants: allParticipants\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"チャット参加者取得エラー:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"サーバーエラーが発生しました\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/chat/participants/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSupabaseAdmin: () => (/* binding */ createSupabaseAdmin),\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   resetPassword: () => (/* binding */ resetPassword),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   signUp: () => (/* binding */ signUp),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://rxnozwuamddqlcwysxag.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bm96d3VhbWRkcWxjd3lzeGFnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc3NjY4MDMsImV4cCI6MjA3MzM0MjgwM30.0sbl6zWJ1XalGTFbsgeMpth6yH-oQA_P1eTCc8lKoAU\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Admin client for server-side operations\nconst createSupabaseAdmin = ()=>{\n    const supabaseUrl = \"https://rxnozwuamddqlcwysxag.supabase.co\" || 0;\n    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bm96d3VhbWRkcWxjd3lzeGFnIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Nzc2NjgwMywiZXhwIjoyMDczMzQyODAzfQ.w7KcFrtcTRhqoHwTSlgTc6NDNHIJH985rAgT9bD0ipE\";\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n        auth: {\n            autoRefreshToken: false,\n            persistSession: false\n        }\n    });\n};\n// Auth helpers\nconst getCurrentUser = async ()=>{\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) throw error;\n    return user;\n};\nconst signIn = async (email, password)=>{\n    const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password\n    });\n    if (error) throw error;\n    return data;\n};\nconst signUp = async (email, password, userData)=>{\n    const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n            data: userData\n        }\n    });\n    if (error) throw error;\n    return data;\n};\nconst signOut = async ()=>{\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n};\nconst resetPassword = async (email)=>{\n    const { data, error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/auth/reset-password`\n    });\n    if (error) throw error;\n    return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW9EO0FBRXBELE1BQU1DLGNBQWNDLDBDQUFvQyxJQUFJO0FBQzVELE1BQU1HLGtCQUFrQkgsa05BQXlDLElBQUk7QUFFOUQsTUFBTUssV0FBV1AsbUVBQVlBLENBQUNDLGFBQWFJLGlCQUFnQjtBQUVsRSwwQ0FBMEM7QUFDbkMsTUFBTUcsc0JBQXNCO0lBQ2pDLE1BQU1QLGNBQWNDLDBDQUFvQyxJQUFJO0lBQzVELE1BQU1PLHFCQUFxQlAsUUFBUUMsR0FBRyxDQUFDTyx5QkFBeUIsSUFBSTtJQUVwRSxPQUFPVixtRUFBWUEsQ0FDakJDLGFBQ0FRLG9CQUNBO1FBQ0VFLE1BQU07WUFDSkMsa0JBQWtCO1lBQ2xCQyxnQkFBZ0I7UUFDbEI7SUFDRjtBQUVKLEVBQUM7QUE4Q0QsZUFBZTtBQUNSLE1BQU1DLGlCQUFpQjtJQUM1QixNQUFNLEVBQUVDLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1WLFNBQVNJLElBQUksQ0FBQ08sT0FBTztJQUM3RCxJQUFJRCxPQUFPLE1BQU1BO0lBQ2pCLE9BQU9EO0FBQ1QsRUFBQztBQUVNLE1BQU1HLFNBQVMsT0FBT0MsT0FBZUM7SUFDMUMsTUFBTSxFQUFFTixJQUFJLEVBQUVFLEtBQUssRUFBRSxHQUFHLE1BQU1WLFNBQVNJLElBQUksQ0FBQ1csa0JBQWtCLENBQUM7UUFDN0RGO1FBQ0FDO0lBQ0Y7SUFDQSxJQUFJSixPQUFPLE1BQU1BO0lBQ2pCLE9BQU9GO0FBQ1QsRUFBQztBQUVNLE1BQU1RLFNBQVMsT0FBT0gsT0FBZUMsVUFBa0JHO0lBQzVELE1BQU0sRUFBRVQsSUFBSSxFQUFFRSxLQUFLLEVBQUUsR0FBRyxNQUFNVixTQUFTSSxJQUFJLENBQUNZLE1BQU0sQ0FBQztRQUNqREg7UUFDQUM7UUFDQUksU0FBUztZQUNQVixNQUFNUztRQUNSO0lBQ0Y7SUFDQSxJQUFJUCxPQUFPLE1BQU1BO0lBQ2pCLE9BQU9GO0FBQ1QsRUFBQztBQUVNLE1BQU1XLFVBQVU7SUFDckIsTUFBTSxFQUFFVCxLQUFLLEVBQUUsR0FBRyxNQUFNVixTQUFTSSxJQUFJLENBQUNlLE9BQU87SUFDN0MsSUFBSVQsT0FBTyxNQUFNQTtBQUNuQixFQUFDO0FBRU0sTUFBTVUsZ0JBQWdCLE9BQU9QO0lBQ2xDLE1BQU0sRUFBRUwsSUFBSSxFQUFFRSxLQUFLLEVBQUUsR0FBRyxNQUFNVixTQUFTSSxJQUFJLENBQUNpQixxQkFBcUIsQ0FBQ1IsT0FBTztRQUN2RVMsWUFBWSxDQUFDLEVBQUVDLE9BQU9DLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDLG9CQUFvQixDQUFDO0lBQzdEO0lBQ0EsSUFBSWYsT0FBTyxNQUFNQTtJQUNqQixPQUFPRjtBQUNULEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaXZpbC1lbmdpbmVlcmluZy1wbGF0Zm9ybS8uL3NyYy9saWIvc3VwYWJhc2UudHM/MDZlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICdodHRwczovL3J4bm96d3VhbWRkcWxjd3lzeGFnLnN1cGFiYXNlLmNvJ1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTSXNJbkpsWmlJNkluSjRibTk2ZDNWaGJXUmtjV3hqZDNsemVHRm5JaXdpY205c1pTSTZJbUZ1YjI0aUxDSnBZWFFpT2pFM05UYzNOalk0TURNc0ltVjRjQ0k2TWpBM016TTBNamd3TTMwLjBzYmw2eldKMVhhbEdURmJzZ2VNcHRoNnlILW9RQV9QMWVUQ2M4bEtvQVUnXG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KVxuXG4vLyBBZG1pbiBjbGllbnQgZm9yIHNlcnZlci1zaWRlIG9wZXJhdGlvbnNcbmV4cG9ydCBjb25zdCBjcmVhdGVTdXBhYmFzZUFkbWluID0gKCkgPT4ge1xuICBjb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCB8fCAnaHR0cHM6Ly9yeG5vend1YW1kZHFsY3d5c3hhZy5zdXBhYmFzZS5jbydcbiAgY29uc3Qgc3VwYWJhc2VTZXJ2aWNlS2V5ID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSB8fCAnZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjM01pT2lKemRYQmhZbUZ6WlNJc0luSmxaaUk2SW5KNGJtOTZkM1ZoYldSa2NXeGpkM2x6ZUdGbklpd2ljbTlzWlNJNkluTmxjblpwWTJWZmNtOXNaU0lzSW1saGRDSTZNVGMxTnpjMk5qZ3dNeXdpWlhod0lqb3lNRGN6TXpReU9EQXpmUS53N0tjRnJ0Y1RSaHFvSHdUU2xnVGM2TkROSElKSDk4NXJBZ1Q5YkQwaXBFJ1xuXG4gIHJldHVybiBjcmVhdGVDbGllbnQoXG4gICAgc3VwYWJhc2VVcmwsXG4gICAgc3VwYWJhc2VTZXJ2aWNlS2V5LFxuICAgIHtcbiAgICAgIGF1dGg6IHtcbiAgICAgICAgYXV0b1JlZnJlc2hUb2tlbjogZmFsc2UsXG4gICAgICAgIHBlcnNpc3RTZXNzaW9uOiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgKVxufVxuXG4vLyBEYXRhYmFzZSB0eXBlc1xuZXhwb3J0IGludGVyZmFjZSBVc2VyIHtcbiAgaWQ6IHN0cmluZ1xuICBhdXRoX3VzZXJfaWQ6IHN0cmluZ1xuICBkaXNwbGF5X25hbWU6IHN0cmluZ1xuICBlbWFpbDogc3RyaW5nXG4gIHNwZWNpYWx0aWVzOiBzdHJpbmdbXVxuICBxdWFsaWZpY2F0aW9uczogc3RyaW5nW11cbiAgZXhwZXJpZW5jZV95ZWFycz86IHN0cmluZ1xuICBtZW1iZXJfbGV2ZWw/OiAnYmVnaW5uZXInIHwgJ2ludGVybWVkaWF0ZScgfCAnYWR2YW5jZWQnXG4gIGF2YXRhcl91cmw/OiBzdHJpbmdcbiAgcmF0aW5nPzogbnVtYmVyXG4gIGZvcm1hbF9uYW1lPzogc3RyaW5nXG4gIHBvc3RhbF9jb2RlPzogc3RyaW5nXG4gIGFkZHJlc3M/OiBzdHJpbmdcbiAgYWRkcmVzc19kZXRhaWw/OiBzdHJpbmdcbiAgcGhvbmVfbnVtYmVyPzogc3RyaW5nXG4gIGNvbXBhbnlfbnVtYmVyPzogc3RyaW5nXG4gIHJlZ2lzdHJhdGlvbl9udW1iZXI/OiBzdHJpbmdcbiAgY3JlYXRlZF9hdDogc3RyaW5nXG4gIHVwZGF0ZWRfYXQ6IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9yZ2FuaXphdGlvbiB7XG4gIGlkOiBzdHJpbmdcbiAgbmFtZTogc3RyaW5nXG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nXG4gIGJpbGxpbmdfZW1haWw/OiBzdHJpbmdcbiAgc3lzdGVtX2ZlZTogbnVtYmVyXG4gIGFjdGl2ZTogYm9vbGVhblxuICBjcmVhdGVkX2F0OiBzdHJpbmdcbiAgdXBkYXRlZF9hdDogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWVtYmVyc2hpcCB7XG4gIGlkOiBzdHJpbmdcbiAgb3JnX2lkOiBzdHJpbmdcbiAgdXNlcl9pZDogc3RyaW5nXG4gIHJvbGU6ICdBZG1pbicgfCAnT3JnQWRtaW4nIHwgJ1N0YWZmJyB8ICdDb250cmFjdG9yJyB8ICdSZXZpZXdlcicgfCAnQXVkaXRvcidcbiAgY3JlYXRlZF9hdDogc3RyaW5nXG59XG5cbmV4cG9ydCB0eXBlIFVzZXJSb2xlID0gJ0FkbWluJyB8ICdPcmdBZG1pbicgfCAnU3RhZmYnIHwgJ0NvbnRyYWN0b3InIHwgJ1Jldmlld2VyJyB8ICdBdWRpdG9yJ1xuXG4vLyBBdXRoIGhlbHBlcnNcbmV4cG9ydCBjb25zdCBnZXRDdXJyZW50VXNlciA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgeyBkYXRhOiB7IHVzZXIgfSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpXG4gIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgcmV0dXJuIHVzZXJcbn1cblxuZXhwb3J0IGNvbnN0IHNpZ25JbiA9IGFzeW5jIChlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbkluV2l0aFBhc3N3b3JkKHtcbiAgICBlbWFpbCxcbiAgICBwYXNzd29yZCxcbiAgfSlcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICByZXR1cm4gZGF0YVxufVxuXG5leHBvcnQgY29uc3Qgc2lnblVwID0gYXN5bmMgKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcsIHVzZXJEYXRhOiBQYXJ0aWFsPFVzZXI+KSA9PiB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnblVwKHtcbiAgICBlbWFpbCxcbiAgICBwYXNzd29yZCxcbiAgICBvcHRpb25zOiB7XG4gICAgICBkYXRhOiB1c2VyRGF0YVxuICAgIH1cbiAgfSlcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICByZXR1cm4gZGF0YVxufVxuXG5leHBvcnQgY29uc3Qgc2lnbk91dCA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduT3V0KClcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxufVxuXG5leHBvcnQgY29uc3QgcmVzZXRQYXNzd29yZCA9IGFzeW5jIChlbWFpbDogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGgucmVzZXRQYXNzd29yZEZvckVtYWlsKGVtYWlsLCB7XG4gICAgcmVkaXJlY3RUbzogYCR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn0vYXV0aC9yZXNldC1wYXNzd29yZGBcbiAgfSlcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICByZXR1cm4gZGF0YVxufSJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlIiwiY3JlYXRlU3VwYWJhc2VBZG1pbiIsInN1cGFiYXNlU2VydmljZUtleSIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJhdXRoIiwiYXV0b1JlZnJlc2hUb2tlbiIsInBlcnNpc3RTZXNzaW9uIiwiZ2V0Q3VycmVudFVzZXIiLCJkYXRhIiwidXNlciIsImVycm9yIiwiZ2V0VXNlciIsInNpZ25JbiIsImVtYWlsIiwicGFzc3dvcmQiLCJzaWduSW5XaXRoUGFzc3dvcmQiLCJzaWduVXAiLCJ1c2VyRGF0YSIsIm9wdGlvbnMiLCJzaWduT3V0IiwicmVzZXRQYXNzd29yZCIsInJlc2V0UGFzc3dvcmRGb3JFbWFpbCIsInJlZGlyZWN0VG8iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Fparticipants%2Froute&page=%2Fapi%2Fchat%2Fparticipants%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Fparticipants%2Froute.ts&appDir=%2FUsers%2Fsayuri%2Fcaddonworks%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsayuri%2Fcaddonworks&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();